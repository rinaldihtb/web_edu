{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"my_form_bca_cc_2",
				"my_form_bca_cc_2_installment"
			],
			[
				"page",
				"page_path"
			],
			[
				"array_ke",
				"array_key_exists"
			],
			[
				"bca",
				"bca_klikpay_2_3"
			],
			[
				"ul",
				"ul	<ul>"
			],
			[
				"paym",
				"payment_code"
			],
			[
				"lorem",
				"lorem	Lorem ipsum"
			],
			[
				"listst",
				"list-style-type"
			],
			[
				"list-s",
				"list-style-position"
			],
			[
				"strto",
				"strtoupper"
			],
			[
				"tr",
				"trxresponse"
			],
			[
				"trx",
				"trxid"
			],
			[
				"bca_klik",
				"bca_klikpay_2_3"
			],
			[
				"payment_me",
				"payment_method_code"
			],
			[
				"bca_kli",
				"bca_klikpay_2"
			],
			[
				"klikPa",
				"klikPay_installment"
			],
			[
				"data",
				"dataSprint"
			],
			[
				"add",
				"additionalData"
			],
			[
				"update",
				"updateDataPayment"
			],
			[
				"Resp",
				"Response_code"
			],
			[
				"reason",
				"reason_english"
			],
			[
				"transaction",
				"transactionNo"
			],
			[
				"sign",
				"signature"
			],
			[
				"date",
				"datetimenow"
			],
			[
				"model_",
				"model_sprint_bca_klikpay_2"
			],
			[
				"backgro",
				"background_yellow"
			],
			[
				"payment",
				"payment_method"
			],
			[
				"mail",
				"mailVerify"
			],
			[
				"curren",
				"currency"
			],
			[
				"PHP",
				"PHPExcel"
			],
			[
				"chek",
				"check_type"
			],
			[
				"las",
				"lasTotal"
			],
			[
				"shipping",
				"shipping_method"
			],
			[
				"shippin",
				"shipping_method"
			],
			[
				"tex",
				"text"
			],
			[
				"se",
				"selectSHip"
			],
			[
				"wat",
				"watch_check"
			],
			[
				"iso_",
				"iso_code_2"
			],
			[
				"sele",
				"selectedObj"
			],
			[
				"selec",
				"selected"
			],
			[
				"vo",
				"voucher_data"
			],
			[
				"cust",
				"customer_detail"
			],
			[
				"special",
				"special_item"
			],
			[
				"speci",
				"special_items"
			],
			[
				"is_in",
				"is_int"
			],
			[
				"cus",
				"cust_temp"
			],
			[
				"sc",
				"script	Tag"
			],
			[
				"script",
				"script	<script>"
			],
			[
				"sty",
				"style	HTML - Stylesheet link"
			],
			[
				"ip",
				"ipAddress"
			],
			[
				"key",
				"keyCode"
			],
			[
				"selecte",
				"SELECTED	option"
			],
			[
				"manufa",
				"manufacturer_info"
			],
			[
				"manufact",
				"manufacturer"
			],
			[
				"name",
				"name_array"
			],
			[
				"nam",
				"name_array"
			],
			[
				"array_p",
				"array_pop"
			],
			[
				"brand",
				"brand_name"
			],
			[
				"count",
				"counter_2"
			],
			[
				"html",
				"htmlentities"
			],
			[
				"html_e",
				"html_entity_decode"
			],
			[
				"prod",
				"products"
			],
			[
				"produ",
				"products"
			],
			[
				"product",
				"products"
			],
			[
				"manufac",
				"manufacturer_id"
			],
			[
				"Product",
				"product_id"
			],
			[
				"manufactur",
				"manufacturer_id"
			],
			[
				"text-",
				"text-transform"
			],
			[
				"bac",
				"background-color"
			],
			[
				"modu",
				"module_data"
			],
			[
				"font-size",
				"font-size-adjust"
			],
			[
				"scri",
				"script	HTML - Script"
			],
			[
				"catego",
				"category_id"
			],
			[
				"pa",
				"Paid"
			],
			[
				"order",
				"order_c"
			],
			[
				"filter_pri",
				"filter_price"
			],
			[
				"json",
				"json_encode"
			],
			[
				"category_",
				"category_info"
			],
			[
				"sql_temp",
				"sql_temp_join"
			],
			[
				"price_",
				"price_to"
			],
			[
				"filter",
				"filter_price"
			],
			[
				"check",
				"checked	input"
			],
			[
				"alert",
				"alert:danger:l	danger_link"
			],
			[
				"head",
				"header	<header>"
			],
			[
				"url_",
				"url_t"
			],
			[
				"url",
				"url_t"
			],
			[
				"row",
				"row_tampun_f"
			],
			[
				"r",
				"row_tampung"
			],
			[
				"extra",
				"extracolor"
			],
			[
				"crit",
				"criteo_final"
			],
			[
				"ce",
				"cek_single"
			],
			[
				"erro",
				"error_t"
			],
			[
				"datep",
				"datepick"
			],
			[
				"str_rep",
				"str_replace"
			],
			[
				"ext",
				"extracolor"
			],
			[
				"quer",
				"query_array"
			],
			[
				"save",
				"save_csv"
			],
			[
				"moel",
				"model_account_customer"
			],
			[
				"customer",
				"customer_info"
			],
			[
				"array",
				"array_data"
			],
			[
				"acc",
				"acceptTime"
			],
			[
				"obje",
				"objectToArray"
			],
			[
				"var",
				"var_dump"
			],
			[
				"qui",
				"quiz_name"
			],
			[
				"quiz",
				"quiz_answer"
			],
			[
				"on",
				"onmouseout	Attr"
			],
			[
				"st",
				"style	HTML - Stylesheet link"
			],
			[
				"products",
				"products_compare"
			],
			[
				"button",
				"button	<button>"
			],
			[
				"t",
				"th	<th>"
			],
			[
				"date_add",
				"date_added"
			],
			[
				"s",
				"style	<style>"
			],
			[
				"manu",
				"manufacturer_id"
			],
			[
				"if",
				"iframe	<iframe>"
			],
			[
				"backg",
				"background-color"
			],
			[
				"hidde",
				"hidden-xs"
			],
			[
				"bank",
				"bank_transfer"
			],
			[
				"text_ord",
				"text_order_confirmation"
			],
			[
				"tra",
				"transfer_value"
			],
			[
				"error_tr",
				"error_transfer_value"
			],
			[
				"tran",
				"transfer_date"
			],
			[
				"get",
				"getElementById"
			],
			[
				"onmou",
				"onmouseover	Attr"
			],
			[
				"img",
				"getImage"
			],
			[
				"td",
				"td	<td>"
			],
			[
				"vid",
				"video	<video>"
			],
			[
				"back",
				"background-color"
			],
			[
				"ba",
				"background-color"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/xampp/htdocs/latihan/develop_mode/demo/advanced.html",
			"settings":
			{
				"buffer_size": 2137,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/forum/content.php",
			"settings":
			{
				"buffer_size": 371,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/common/header.php",
			"settings":
			{
				"buffer_size": 3314,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/media.php",
			"settings":
			{
				"buffer_size": 241,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/common/footer.php",
			"settings":
			{
				"buffer_size": 333,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/common/content.php",
			"settings":
			{
				"buffer_size": 282,
				"line_ending": "Unix"
			}
		},
		{
			"file": "assets/css/main.css",
			"settings":
			{
				"buffer_size": 5618,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/forum/sidebar.php",
			"settings":
			{
				"buffer_size": 2001,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/controllers/forum/forum.php",
			"settings":
			{
				"buffer_size": 536,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/forum/thread.php",
			"settings":
			{
				"buffer_size": 5012,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/controller/checkout/confirm.php",
			"settings":
			{
				"buffer_size": 33820,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/controller/checkout/success.php",
			"settings":
			{
				"buffer_size": 68419,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/success.tpl",
			"settings":
			{
				"buffer_size": 33082,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/model/checkout/order.php",
			"settings":
			{
				"buffer_size": 55115,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/system/library/cart.php",
			"settings":
			{
				"buffer_size": 41763,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/model/shipping/jne.php",
			"settings":
			{
				"buffer_size": 10223,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/model/shipping/jet.php",
			"settings":
			{
				"buffer_size": 10154,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/controller/product/manufacturer.php",
			"settings":
			{
				"buffer_size": 30912,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/product/manufacturer_info.tpl",
			"settings":
			{
				"buffer_size": 13200,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/js/common.js",
			"settings":
			{
				"buffer_size": 12223,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/controller/product/compare.php",
			"settings":
			{
				"buffer_size": 8359,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/footer.tpl",
			"settings":
			{
				"buffer_size": 21077,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_cc_2_12.php",
			"settings":
			{
				"buffer_size": 1574,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/model/payment/bca_cc_2_6.php",
			"settings":
			{
				"buffer_size": 997,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cc_2_12.php",
			"settings":
			{
				"buffer_size": 1922,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_cc_2_3.php",
			"settings":
			{
				"buffer_size": 200,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_cc_2.php",
			"settings":
			{
				"buffer_size": 185,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/aurelleaja/view/template/payment/bca_cc_2_12.tpl",
			"settings":
			{
				"buffer_size": 6471,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/citywalkadminzz/model/sale/order.php",
			"settings":
			{
				"buffer_size": 88602,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\nclass ControllerSaleOrdercw extends Controller {\n	private $error = array();\n\n  	public function index() {\n		$this->load->language('sale/order');\n\n		$this->document->setTitle($this->language->get('heading_title'));\n\n		$this->load->model('sale/order');\n\n    	$this->getList();\n  	}\n	\n  	public function insert() {\n		$this->load->language('sale/order');\n\n		$this->document->setTitle($this->language->get('heading_title'));\n\n		$this->load->model('sale/order');\n\n		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {\n      	  	$this->model_sale_order->addOrder($this->request->post);\n			\n			$this->session->data['success'] = $this->language->get('text_success');\n		  \n			$url = '';\n			\n			if (isset($this->request->get['filter_order_id'])) {\n				$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n			}\n			\n			if (isset($this->request->get['filter_customer'])) {\n				$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n			}\n												\n			if (isset($this->request->get['filter_order_status_id'])) {\n				$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n			}\n			\n			if (isset($this->request->get['filter_total'])) {\n				$url .= '&filter_total=' . $this->request->get['filter_total'];\n			}\n						\n			if (isset($this->request->get['filter_date_added'])) {\n				$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n			}\n			\n			if (isset($this->request->get['filter_date_modified'])) {\n				$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n			}\n													\n			if (isset($this->request->get['sort'])) {\n				$url .= '&sort=' . $this->request->get['sort'];\n			}\n\n			if (isset($this->request->get['order'])) {\n				$url .= '&order=' . $this->request->get['order'];\n			}\n\n			if (isset($this->request->get['page'])) {\n				$url .= '&page=' . $this->request->get['page'];\n			}\n			\n			$this->redirect($this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url, 'SSL'));\n		}\n		\n    	$this->getForm(\"insert\");\n  	}\n	\n  	public function update() {\n		$this->load->language('sale/order');\n\n		$this->document->setTitle($this->language->get('heading_title'));\n\n		$this->load->model('sale/order');\n\n		$confirm = $this->model_sale_order->orderConfirm($this->request->get['order_id']);\n		$this->data['confirm'] = $confirm['status'];\n		$this->data['transaction_status'] = $confirm['transaction_status'];\n    	\n		\n		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {\n			echo \"<pre>\";\n			print_r($this->request->post);\n			echo \"</pre>\";\n			//echo \"asdasd\";\n			$this->model_sale_order->addOrder($this->request->post, $this->request->get['order_id']);\n\n			//echo \"asd\";\n			/*if (isset($this->data['valid'] = $this->request->post['valid']{\n				$this->data['valid'] = $this->request->post['valid'];\n			} else {\n				$this->data['valid'] = '';\n			}*/\n\n			/*$this->model_sale_order->validConfirm($this->request->get['order_id'], $this->data['valid']);*/\n	  		\n			$this->session->data['success'] = $this->language->get('text_success');\n	  \n			$url = '';\n\n			if (isset($this->request->get['filter_order_id'])) {\n				$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n			}\n			\n			if (isset($this->request->get['filter_customer'])) {\n				$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n			}\n												\n			if (isset($this->request->get['filter_order_status_id'])) {\n				$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n			}\n			\n			if (isset($this->request->get['filter_total'])) {\n				$url .= '&filter_total=' . $this->request->get['filter_total'];\n			}\n						\n			if (isset($this->request->get['filter_date_added'])) {\n				$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n			}\n			\n			if (isset($this->request->get['filter_date_modified'])) {\n				$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n			}\n													\n			if (isset($this->request->get['sort'])) {\n				$url .= '&sort=' . $this->request->get['sort'];\n			}\n\n			if (isset($this->request->get['order'])) {\n				$url .= '&order=' . $this->request->get['order'];\n			}\n\n			if (isset($this->request->get['page'])) {\n				$url .= '&page=' . $this->request->get['page'];\n			}\n			\n			//echo $url;\n			$this->redirect($this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL'));\n		}\n\n		// echo \"<pre>\";\n		// print_r($this->request->post);\n		// print_r($this->error);\n		// echo \"</pre>\";\n\n		\n    	$this->getForm(\"insert\");\n  	}\n	\n  	public function delete() {\n		$this->load->language('sale/order');\n\n		$this->document->setTitle($this->language->get('heading_title'));\n\n		$this->load->model('sale/order');\n\n    	if (isset($this->request->post['selected']) && ($this->validateDelete())) {\n			foreach ($this->request->post['selected'] as $order_id) {\n				$this->model_sale_order->deleteOrder($order_id);\n			}\n\n			$this->session->data['success'] = $this->language->get('text_success');\n\n			$url = '';\n\n			if (isset($this->request->get['filter_order_id'])) {\n				$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n			}\n			\n			if (isset($this->request->get['filter_customer'])) {\n				$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n			}\n												\n			if (isset($this->request->get['filter_order_status_id'])) {\n				$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n			}\n			\n			if (isset($this->request->get['filter_total'])) {\n				$url .= '&filter_total=' . $this->request->get['filter_total'];\n			}\n						\n			if (isset($this->request->get['filter_date_added'])) {\n				$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n			}\n			\n			if (isset($this->request->get['filter_date_modified'])) {\n				$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n			}\n													\n			if (isset($this->request->get['sort'])) {\n				$url .= '&sort=' . $this->request->get['sort'];\n			}\n\n			if (isset($this->request->get['order'])) {\n				$url .= '&order=' . $this->request->get['order'];\n			}\n\n			if (isset($this->request->get['page'])) {\n				$url .= '&page=' . $this->request->get['page'];\n			}\n\n			$this->redirect($this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url, 'SSL'));\n    	}\n\n    	$this->getList();\n  	}\n\n  	private function getList() {\n		$this->data['user_group_id'] = $this->user->getUserGroupId();\n	\n		if (isset($this->request->get['filter_order_id'])) {\n			$filter_order_id = $this->request->get['filter_order_id'];\n		} else {\n			$filter_order_id = null;\n		}\n\n		if (isset($this->request->get['filter_customer'])) {\n			$filter_customer = $this->request->get['filter_customer'];\n		} else {\n			$filter_customer = null;\n		}\n\n		if (isset($this->request->get['filter_order_status_id'])) {\n			$filter_order_status_id = $this->request->get['filter_order_status_id'];\n		} else {\n			$filter_order_status_id = null;\n		}\n		\n		if (isset($this->request->get['filter_total'])) {\n			$filter_total = $this->request->get['filter_total'];\n		} else {\n			$filter_total = null;\n		}\n		\n		if (isset($this->request->get['filter_date_added'])) {\n			$filter_date_added = $this->request->get['filter_date_added'];\n		} else {\n			$filter_date_added = null;\n		}\n		\n		if (isset($this->request->get['filter_date_modified'])) {\n			$filter_date_modified = $this->request->get['filter_date_modified'];\n		} else {\n			$filter_date_modified = null;\n		}\n\n		if (isset($this->request->get['sort'])) {\n			$sort = $this->request->get['sort'];\n		} else {\n			$sort = 'o.order_rcw_id';\n		}\n\n		if (isset($this->request->get['order'])) {\n			$order = $this->request->get['order'];\n		} else {\n			$order = 'DESC';\n		}\n		\n		if (isset($this->request->get['page'])) {\n			$page = $this->request->get['page'];\n		} else {\n			$page = 1;\n		}\n				\n		$url = '';\n\n		if (isset($this->request->get['filter_order_id'])) {\n			$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n		}\n		\n		if (isset($this->request->get['filter_customer'])) {\n			$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n		}\n											\n		if (isset($this->request->get['filter_order_status_id'])) {\n			$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n		}\n		\n		if (isset($this->request->get['filter_total'])) {\n			$url .= '&filter_total=' . $this->request->get['filter_total'];\n		}\n					\n		if (isset($this->request->get['filter_date_added'])) {\n			$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n		}\n		\n		if (isset($this->request->get['filter_date_modified'])) {\n			$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n		}\n\n		if (isset($this->request->get['sort'])) {\n			$url .= '&sort=' . $this->request->get['sort'];\n		}\n\n		if (isset($this->request->get['order'])) {\n			$url .= '&order=' . $this->request->get['order'];\n		}\n		\n		if (isset($this->request->get['page'])) {\n			$url .= '&page=' . $this->request->get['page'];\n		}\n\n		$this->load->model('setting/store');\n		\n		$this->data['stores'] = $this->model_setting_store->getStores();\n		\n		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {\n			$this->data['store_url'] = HTTPS_CATALOG;\n		} else {\n			$this->data['store_url'] = HTTP_CATALOG;\n		}\n		\n  		$this->data['breadcrumbs'] = array();\n\n   		$this->data['breadcrumbs'][] = array(\n       		'text'      => $this->language->get('text_home'),\n			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),\n      		'separator' => false\n   		);\n\n   		$this->data['breadcrumbs'][] = array(\n       		'text'      => $this->language->get('heading_title'),\n			'href'      => $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL'),\n      		'separator' => ' :: '\n   		);\n		\n		/*$this->data['invoice'] = $this->url->link('sale/order/invoice', 'token=' . $this->session->data['token'], 'SSL');*/\n		$this->data['insert'] = $this->url->link('sale/ordercw/insert', 'token=' . $this->session->data['token'], 'SSL');\n		$this->data['delete'] = $this->url->link('sale/ordercw/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');\n\n		$this->data['orders'] = array();\n\n		$data = array(\n			'filter_order_id'        => $filter_order_id,\n			'filter_customer'	     => $filter_customer,\n			'filter_order_status_id' => $filter_order_status_id,\n			'filter_total'           => $filter_total,\n			'filter_date_added'      => $filter_date_added,\n			'filter_date_modified'   => $filter_date_modified,\n			'sort'                   => $sort,\n			'order'                  => $order,\n			'start'                  => ($page - 1) * $this->config->get('config_admin_limit'),\n			'limit'                  => $this->config->get('config_admin_limit')\n		);\n		\n		if($this->data['user_group_id'] == 99) {\n			$data += array(\n				'dummy_order_total' => 800000\n			);\n		}\n		#echo \"<pre>\";\n		\n		$order_total = $this->model_sale_order->getTotalOrders($data);\n\n		$results = $this->model_sale_order->getOrders($data);\n\n    	foreach ($results as $result) {\n			$action = array();\n			\n			$action[] = array(\n				'text' => $this->language->get('text_view'),\n				'href' => $this->url->link('sale/ordercw/info', 'token=' . $this->session->data['token'] . '&order_id=' . $result['order_rcw_id'] . $url, 'SSL')\n			);\n			\n			//Edit action not available for lowest group or any other groups, except top administrator, if order status is complete			\n			if($this->data['user_group_id'] == 3) {\n				if($result['status'] == 'Complete') {\n					$this->data['orders'][] = array(\n						'order_id'      => $result['order_rcw_id'],\n						'customer'      => $result['customer'],\n						'status'        => $result['status'],\n						'total'         => $this->currency->format($result['total'], $result['currency_code'], $result['currency_value']),\n						'date_added'    => date($this->language->get('date_format_short'), strtotime($result['date_added'])),\n						'date_modified' => date($this->language->get('date_format_short'), strtotime($result['date_modified'])),\n						'selected'      => isset($this->request->post['selected']) && in_array($result['order_rcw_id'], $this->request->post['selected']),\n						'action'        => $action\n					);\n				}\n			} else {\n				if($result['status'] != 'Complete' || $this->data['user_group_id'] <= 2) {\n					//if (strtotime($result['date_added']) > strtotime('-' . (int)$this->config->get('config_order_edit') . ' day') && $result['invoice_no'] == 0) {\n					if (strtotime($result['date_added']) > strtotime('-' . (int)$this->config->get('config_order_edit') . ' day')) {\n						$action[] = array(\n							'text' => $this->language->get('text_edit'),\n							'href' => $this->url->link('sale/ordercw/update', 'token=' . $this->session->data['token'] . '&order_id=' . $result['order_rcw_id'] . $url, 'SSL')\n						);\n					}\n				}\n				\n				$this->data['orders'][] = array(\n					'order_id'      => $result['order_rcw_id'],\n					'customer'      => $result['customer'],\n					'status'        => $result['status'],\n					'total'         => $this->currency->format($result['total'], $result['currency_code'], $result['currency_value']),\n					'date_added'    => date($this->language->get('date_format_short'), strtotime($result['date_added'])),\n					'date_modified' => date($this->language->get('date_format_short'), strtotime($result['date_modified'])),\n					'selected'      => isset($this->request->post['selected']) && in_array($result['order_rcw_id'], $this->request->post['selected']),\n					'action'        => $action\n				);\n			}\n		}\n\n		$this->data['heading_title'] = $this->language->get('heading_title');\n\n		$this->data['text_no_results'] = $this->language->get('text_no_results');\n		$this->data['text_missing'] = $this->language->get('text_missing');\n		$this->data['text_send_email'] = \"Send\";\n\n		$this->data['column_order_id'] = $this->language->get('column_order_id');\n    	$this->data['column_customer'] = $this->language->get('column_customer');\n		$this->data['column_status'] = $this->language->get('column_status');\n		$this->data['column_total'] = $this->language->get('column_total');\n		$this->data['column_date_added'] = $this->language->get('column_date_added');\n		$this->data['column_date_modified'] = $this->language->get('column_date_modified');\n		$this->data['column_action'] = $this->language->get('column_action');\n\n		$this->data['button_invoice'] = $this->language->get('button_invoice');\n		$this->data['button_insert'] = $this->language->get('button_insert');\n		$this->data['button_delete'] = $this->language->get('button_delete');\n		$this->data['button_filter'] = $this->language->get('button_filter');\n\n		$this->data['token'] = $this->session->data['token'];\n		\n		if (isset($this->error['warning'])) {\n			$this->data['error_warning'] = $this->error['warning'];\n		} else {\n			$this->data['error_warning'] = '';\n		}\n\n		if (isset($this->session->data['success'])) {\n			$this->data['success'] = $this->session->data['success'];\n\n			unset($this->session->data['success']);\n		} else {\n			$this->data['success'] = '';\n		}\n\n		$url = '';\n\n		if (isset($this->request->get['filter_order_id'])) {\n			$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n		}\n		\n		if (isset($this->request->get['filter_customer'])) {\n			$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n		}\n											\n		if (isset($this->request->get['filter_order_status_id'])) {\n			$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n		}\n		\n		if (isset($this->request->get['filter_total'])) {\n			$url .= '&filter_total=' . $this->request->get['filter_total'];\n		}\n					\n		if (isset($this->request->get['filter_date_added'])) {\n			$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n		}\n		\n		if (isset($this->request->get['filter_date_modified'])) {\n			$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n		}\n\n		if ($order == 'ASC') {\n			$url .= '&order=DESC';\n		} else {\n			$url .= '&order=ASC';\n		}\n\n		if (isset($this->request->get['page'])) {\n			$url .= '&page=' . $this->request->get['page'];\n		}\n\n		$this->data['sort_order'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=o.order_id' . $url, 'SSL');\n		$this->data['sort_customer'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=customer' . $url, 'SSL');\n		$this->data['sort_status'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=status' . $url, 'SSL');\n		$this->data['sort_total'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=o.total' . $url, 'SSL');\n		$this->data['sort_date_added'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=o.date_added' . $url, 'SSL');\n		$this->data['sort_date_modified'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . '&sort=o.date_modified' . $url, 'SSL');\n\n		$url = '';\n\n		if (isset($this->request->get['filter_order_id'])) {\n			$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n		}	\n		\n		if (isset($this->request->get['filter_customer'])) {\n			$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n		}\n											\n		if (isset($this->request->get['filter_order_status_id'])) {\n			$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n		}\n		\n		if (isset($this->request->get['filter_total'])) {\n			$url .= '&filter_total=' . $this->request->get['filter_total'];\n		}\n					\n		if (isset($this->request->get['filter_date_added'])) {\n			$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n		}\n		\n		if (isset($this->request->get['filter_date_modified'])) {\n			$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n		}\n\n		if (isset($this->request->get['sort'])) {\n			$url .= '&sort=' . $this->request->get['sort'];\n		}\n\n		if (isset($this->request->get['order'])) {\n			$url .= '&order=' . $this->request->get['order'];\n		}\n\n		$pagination = new Pagination();\n		$pagination->total = $order_total;\n		$pagination->page = $page;\n		$pagination->limit = $this->config->get('config_admin_limit');\n		$pagination->text = $this->language->get('text_pagination');\n		$pagination->url = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');\n\n		$this->data['pagination'] = $pagination->render();\n\n		$this->data['filter_order_id'] = $filter_order_id;\n		$this->data['filter_customer'] = $filter_customer;\n		$this->data['filter_order_status_id'] = $filter_order_status_id;\n		$this->data['filter_total'] = $filter_total;\n		$this->data['filter_date_added'] = $filter_date_added;\n		$this->data['filter_date_modified'] = $filter_date_modified;\n\n		$this->load->model('localisation/order_status');\n\n    	$this->data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();\n\n		$this->data['sort'] = $sort;\n		$this->data['order'] = $order;\n\n		$this->template = 'sale/order_listcw.tpl';\n		$this->children = array(\n			'common/header',\n			'common/footer'\n		);\n		#print_r($results);\n		#echo \"</pre>\";\n		$this->response->setOutput($this->render());\n  	}\n\n  	public function getForm($action) {\n		$this->load->model('sale/customer');\n				\n		$this->data['heading_title'] = $this->language->get('heading_title');\n		 \n		$this->data['text_no_results'] = $this->language->get('text_no_results');  \n		$this->data['text_default'] = $this->language->get('text_default');\n		$this->data['text_select'] = $this->language->get('text_select');\n		$this->data['text_none'] = $this->language->get('text_none');\n		$this->data['text_wait'] = $this->language->get('text_wait');\n		$this->data['text_product'] = $this->language->get('text_product');\n		$this->data['text_service'] = \"Add Item(s)\";\n		$this->data['text_voucher'] = $this->language->get('text_voucher');\n		$this->data['text_order'] = $this->language->get('text_order');\n		\n		$this->data['entry_store'] = $this->language->get('entry_store');\n		$this->data['entry_customer'] = $this->language->get('entry_customer');\n		$this->data['entry_customer_group'] = $this->language->get('entry_customer_group');\n		$this->data['entry_firstname'] = $this->language->get('entry_firstname');\n		$this->data['entry_lastname'] = $this->language->get('entry_lastname');\n		$this->data['entry_email'] = $this->language->get('entry_email');\n		$this->data['entry_telephone'] = $this->language->get('entry_telephone');\n		$this->data['entry_fax'] = $this->language->get('entry_fax');\n		$this->data['entry_order_status'] = $this->language->get('entry_order_status');\n		$this->data['entry_comment'] = $this->language->get('entry_comment');\n		$this->data['entry_credit_to'] = \"Credit:\";\n		$this->data['entry_affiliate'] = $this->language->get('entry_affiliate');\n		$this->data['entry_address'] = $this->language->get('entry_address');\n		$this->data['entry_company'] = $this->language->get('entry_company');\n		$this->data['entry_company_id'] = $this->language->get('entry_company_id');\n		$this->data['entry_tax_id'] = $this->language->get('entry_tax_id');\n		$this->data['entry_address_1'] = $this->language->get('entry_address_1');\n		$this->data['entry_address_2'] = $this->language->get('entry_address_2');\n		$this->data['entry_city'] = $this->language->get('entry_city');\n		$this->data['entry_postcode'] = $this->language->get('entry_postcode');\n		$this->data['entry_zone'] = $this->language->get('entry_zone');\n		$this->data['entry_zone_code'] = $this->language->get('entry_zone_code');\n		$this->data['entry_country'] = $this->language->get('entry_country');		\n		$this->data['entry_product'] = $this->language->get('entry_product');\n		$this->data['entry_option'] = $this->language->get('entry_option');\n		$this->data['entry_quantity'] = $this->language->get('entry_quantity');\n		$this->data['entry_to_name'] = $this->language->get('entry_to_name');\n		$this->data['entry_to_email'] = $this->language->get('entry_to_email');\n		$this->data['entry_from_name'] = $this->language->get('entry_from_name');\n		$this->data['entry_from_email'] = $this->language->get('entry_from_email');\n		$this->data['entry_theme'] = $this->language->get('entry_theme');	\n		$this->data['entry_message'] = $this->language->get('entry_message');\n		$this->data['entry_amount'] = $this->language->get('entry_amount');\n		$this->data['entry_shipping'] = $this->language->get('entry_shipping');\n		$this->data['entry_payment'] = $this->language->get('entry_payment');\n		$this->data['entry_voucher'] = $this->language->get('entry_voucher');\n		$this->data['entry_coupon'] = $this->language->get('entry_coupon');\n		$this->data['entry_reward'] = $this->language->get('entry_reward');\n		$this->data['entry_service'] = \"Choose Item\";\n		$this->data['entry_description'] = \"Description\";\n		$this->data['entry_price'] = \"Price\";\n\n		$this->data['column_product'] = $this->language->get('column_product');\n		$this->data['column_model'] = $this->language->get('column_model');\n		$this->data['column_quantity'] = $this->language->get('column_quantity');\n		$this->data['column_price'] = $this->language->get('column_price');\n		$this->data['column_total'] = $this->language->get('column_total');\n		$this->data['column_description'] = \"Description\";		\n			\n		$this->data['button_save'] = $this->language->get('button_save');\n		$this->data['button_cancel'] = $this->language->get('button_cancel');\n		$this->data['button_back'] = $this->language->get('button_back');\n		$this->data['button_add_product'] = $this->language->get('button_add_product');\n		$this->data['button_add_service'] = \"Add Item\";\n		$this->data['button_add_voucher'] = $this->language->get('button_add_voucher');\n		$this->data['button_update_total'] = $this->language->get('button_update_total');\n		$this->data['button_remove'] = $this->language->get('button_remove');\n		$this->data['button_upload'] = $this->language->get('button_upload');\n\n		$this->data['tab_order'] = $this->language->get('tab_order');\n		$this->data['tab_customer'] = $this->language->get('tab_customer');\n		$this->data['tab_payment'] = $this->language->get('tab_payment');\n		$this->data['tab_shipping'] = $this->language->get('tab_shipping');\n		$this->data['tab_product'] = $this->language->get('tab_product');\n		$this->data['tab_service'] = \"Special Items\";\n		$this->data['tab_voucher'] = $this->language->get('tab_voucher');\n		$this->data['tab_total'] = $this->language->get('tab_total');\n\n 		if (isset($this->error['warning'])) {\n			$this->data['error_warning'] = $this->error['warning'];\n		} else {\n			$this->data['error_warning'] = '';\n		}\n		\n 		if (isset($this->error['firstname'])) {\n			$this->data['error_firstname'] = $this->error['firstname'];\n		} else {\n			$this->data['error_firstname'] = '';\n		}\n\n 		if (isset($this->error['lastname'])) {\n			$this->data['error_lastname'] = $this->error['lastname'];\n		} else {\n			$this->data['error_lastname'] = '';\n		}\n		\n 		if (isset($this->error['email'])) {\n			$this->data['error_email'] = $this->error['email'];\n		} else {\n			$this->data['error_email'] = '';\n		}\n		\n 		if (isset($this->error['telephone'])) {\n			$this->data['error_telephone'] = $this->error['telephone'];\n		} else {\n			$this->data['error_telephone'] = '';\n		}\n						\n 		if (isset($this->error['payment_firstname'])) {\n			$this->data['error_payment_firstname'] = $this->error['payment_firstname'];\n		} else {\n			$this->data['error_payment_firstname'] = '';\n		}\n\n 		if (isset($this->error['payment_lastname'])) {\n			$this->data['error_payment_lastname'] = $this->error['payment_lastname'];\n		} else {\n			$this->data['error_payment_lastname'] = '';\n		}\n			\n		if (isset($this->error['payment_address_1'])) {\n			$this->data['error_payment_address_1'] = $this->error['payment_address_1'];\n		} else {\n			$this->data['error_payment_address_1'] = '';\n		}\n		\n		if (isset($this->error['payment_city'])) {\n			$this->data['error_payment_city'] = $this->error['payment_city'];\n		} else {\n			$this->data['error_payment_city'] = '';\n		}\n		\n		if (isset($this->error['payment_postcode'])) {\n			$this->data['error_payment_postcode'] = $this->error['payment_postcode'];\n		} else {\n			$this->data['error_payment_postcode'] = '';\n		}\n		\n		if (isset($this->error['payment_tax_id'])) {\n			$this->data['error_payment_tax_id'] = $this->error['payment_tax_id'];\n		} else {\n			$this->data['error_payment_tax_id'] = '';\n		}\n				\n		if (isset($this->error['payment_country'])) {\n			$this->data['error_payment_country'] = $this->error['payment_country'];\n		} else {\n			$this->data['error_payment_country'] = '';\n		}\n		\n		if (isset($this->error['payment_zone'])) {\n			$this->data['error_payment_zone'] = $this->error['payment_zone'];\n		} else {\n			$this->data['error_payment_zone'] = '';\n		}\n		\n		if (isset($this->error['payment_method'])) {\n			$this->data['error_payment_method'] = $this->error['payment_method'];\n		} else {\n			$this->data['error_payment_method'] = '';\n		}\n		\n		if (isset($this->error['payment_number'])) {\n			$this->data['error_payment_number'] = $this->error['payment_number'];\n		} else {\n			$this->data['error_payment_number'] = '';\n		}\n\n 		if (isset($this->error['shipping_firstname'])) {\n			$this->data['error_shipping_firstname'] = $this->error['shipping_firstname'];\n		} else {\n			$this->data['error_shipping_firstname'] = '';\n		}\n\n 		if (isset($this->error['shipping_lastname'])) {\n			$this->data['error_shipping_lastname'] = $this->error['shipping_lastname'];\n		} else {\n			$this->data['error_shipping_lastname'] = '';\n		}\n		\n		if (isset($this->error['shipping_telephone'])) {\n			$this->data['error_shipping_telephone'] = $this->error['shipping_telephone'];\n		} else {\n			$this->data['error_shipping_telephone'] = '';\n		}\n				\n		if (isset($this->error['shipping_address_1'])) {\n			$this->data['error_shipping_address_1'] = $this->error['shipping_address_1'];\n		} else {\n			$this->data['error_shipping_address_1'] = '';\n		}\n		\n		if (isset($this->error['shipping_city'])) {\n			$this->data['error_shipping_city'] = $this->error['shipping_city'];\n		} else {\n			$this->data['error_shipping_city'] = '';\n		}\n		\n		if (isset($this->error['shipping_postcode'])) {\n			$this->data['error_shipping_postcode'] = $this->error['shipping_postcode'];\n		} else {\n			$this->data['error_shipping_postcode'] = '';\n		}\n		\n		if (isset($this->error['shipping_country'])) {\n			$this->data['error_shipping_country'] = $this->error['shipping_country'];\n		} else {\n			$this->data['error_shipping_country'] = '';\n		}\n		\n		if (isset($this->error['shipping_zone'])) {\n			$this->data['error_shipping_zone'] = $this->error['shipping_zone'];\n		} else {\n			$this->data['error_shipping_zone'] = '';\n		}\n		\n		if (isset($this->error['shipping_method'])) {\n			$this->data['error_shipping_method'] = $this->error['shipping_method'];\n		} else {\n			$this->data['error_shipping_method'] = '';\n		}\n		\n		/*Source, Sent & Credit To 6-1-2015*/\n		if (isset($this->error['source'])) {\n			$this->data['error_source'] = $this->error['source'];\n		} else {\n			$this->data['error_source'] = '';\n		}\n		\n		if (isset($this->error['sent'])) {\n			$this->data['error_sent'] = $this->error['sent'];\n		} else {\n			$this->data['error_sent'] = '';\n		}\n		\n		if (isset($this->error['credit_to'])) {\n			$this->data['error_credit_to'] = $this->error['credit_to'];\n		} else {\n			$this->data['error_credit_to'] = '';\n		}\n		/*END*/\n								\n		$url = '';\n\n		if (isset($this->request->get['filter_order_id'])) {\n			$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n		}\n		\n		if (isset($this->request->get['filter_customer'])) {\n			$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n		}\n											\n		if (isset($this->request->get['filter_order_status_id'])) {\n			$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n		}\n		\n		if (isset($this->request->get['filter_total'])) {\n			$url .= '&filter_total=' . $this->request->get['filter_total'];\n		}\n					\n		if (isset($this->request->get['filter_date_added'])) {\n			$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n		}\n		\n		if (isset($this->request->get['filter_date_modified'])) {\n			$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n		}\n\n		if (isset($this->request->get['sort'])) {\n			$url .= '&sort=' . $this->request->get['sort'];\n		}\n\n		if (isset($this->request->get['order'])) {\n			$url .= '&order=' . $this->request->get['order'];\n		}\n		\n		if (isset($this->request->get['page'])) {\n			$url .= '&page=' . $this->request->get['page'];\n		}\n\n		$this->data['breadcrumbs'] = array();\n\n		$this->data['breadcrumbs'][] = array(\n			'text'      => $this->language->get('text_home'),\n			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),\n			'separator' => false\n		);\n\n		$this->data['breadcrumbs'][] = array(\n			'text'      => $this->language->get('heading_title'),\n			'href'      => $this->url->link('sale/order', 'token=' . $this->session->data['token'] . $url, 'SSL'),				\n			'separator' => ' :: '\n		);\n\n		if (!isset($this->request->get['order_id'])) {\n			$this->data['action'] = $this->url->link('sale/ordercw/insert', 'token=' . $this->session->data['token'] . $url, 'SSL');\n			$this->data['form_status'] = 'insert';\n		} else {\n			$this->data['action'] = $this->url->link('sale/ordercw/update', 'token=' . $this->session->data['token'] . '&order_id=' . $this->request->get['order_id'] . $url, 'SSL');\n			$this->data['form_status'] = 'update';\n		}\n		\n		$this->data['cancel'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL');\n\n    	if (isset($this->request->get['order_id']) && ($this->request->server['REQUEST_METHOD'] != 'POST')) {\n      		$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n    	}\n\n		$this->data['token'] = $this->session->data['token'];\n		\n		if (isset($this->request->get['order_id'])) {\n			$this->data['order_id'] = $this->request->get['order_id'];\n		} else {\n			$this->data['order_id'] = 0;\n		}\n					\n    	if (isset($this->request->post['store_id'])) {\n      		$this->data['store_id'] = $this->request->post['store_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['store_id'] = $order_info['store_id'];\n		} else {\n      		$this->data['store_id'] = '';\n    	}\n					\n    	if (!empty($order_info['ip'])) { \n			$this->data['ip'] = $order_info['ip'];\n		} else {\n      		$this->data['ip'] = '';\n    	}\n					\n    	if (!empty($order_info['date_added'])) { \n			$this->data['date_added'] = date('d-m-Y', strtotime($order_info['date_added']));\n		} else {\n      		$this->data['date_added'] = '';\n    	}\n		\n		$this->load->model('setting/store');\n		\n		$this->data['stores'] = $this->model_setting_store->getStores();\n		\n		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {\n			$this->data['store_url'] = HTTPS_CATALOG;\n		} else {\n			$this->data['store_url'] = HTTP_CATALOG;\n		}\n		\n		if (isset($this->request->post['sales_type'])) {\n			$this->data['sales_type'] = $this->request->post['sales_type'];\n		} elseif (!empty($order_info)) {\n			$this->data['sales_type'] = $order_info['sales_type'];\n		} else {\n			$this->data['sales_type'] = '';\n		}\n		\n		if (isset($this->request->post['customer'])) {\n			$this->data['customer'] = $this->request->post['customer'];\n		} elseif (!empty($order_info)) {\n			$this->data['customer'] = $order_info['customer'];\n		} else {\n			$this->data['customer'] = '';\n		}\n						\n		if (isset($this->request->post['customer_id'])) {\n			$this->data['customer_id'] = $this->request->post['customer_id'];\n		} elseif (!empty($order_info)) {\n			$this->data['customer_id'] = $order_info['customer_id'];\n		} else {\n			$this->data['customer_id'] = '';\n		}\n		\n		if (isset($this->request->post['customer_group_id'])) {\n			$this->data['customer_group_id'] = $this->request->post['customer_group_id'];\n		} elseif (!empty($order_info)) {\n			$this->data['customer_group_id'] = $order_info['customer_group_id'];\n		} else {\n			$this->data['customer_group_id'] = '';\n		}\n		\n		$this->load->model('sale/customer_group');\n		\n		$this->data['customer_groups'] = $this->model_sale_customer_group->getCustomerGroups();\n								\n    	if (isset($this->request->post['firstname'])) {\n      		$this->data['firstname'] = $this->request->post['firstname'];\n		} elseif (!empty($order_info)) { \n			$this->data['firstname'] = $order_info['firstname'];\n		} else {\n      		$this->data['firstname'] = '';\n    	}\n\n    	if (isset($this->request->post['lastname'])) {\n      		$this->data['lastname'] = $this->request->post['lastname'];\n    	} elseif (!empty($order_info)) { \n			$this->data['lastname'] = $order_info['lastname'];\n		} else {\n      		$this->data['lastname'] = '';\n    	}\n\n    	if (isset($this->request->post['email'])) {\n      		$this->data['email'] = $this->request->post['email'];\n    	} elseif (!empty($order_info)) { \n			$this->data['email'] = $order_info['email'];\n		} else {\n      		$this->data['email'] = '';\n    	}\n				\n    	if (isset($this->request->post['telephone'])) {\n      		$this->data['telephone'] = $this->request->post['telephone'];\n    	} elseif (!empty($order_info)) { \n			$this->data['telephone'] = $order_info['telephone'];\n		} else {\n      		$this->data['telephone'] = '';\n    	}\n		\n    	if (isset($this->request->post['fax'])) {\n      		$this->data['fax'] = $this->request->post['fax'];\n    	} elseif (!empty($order_info)) { \n			$this->data['fax'] = $order_info['fax'];\n		} else {\n      		$this->data['fax'] = '';\n    	}	\n		\n		if (isset($this->request->post['affiliate_id'])) {\n      		$this->data['affiliate_id'] = $this->request->post['affiliate_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['affiliate_id'] = $order_info['affiliate_id'];\n		} else {\n      		$this->data['affiliate_id'] = '';\n    	}\n		\n		if (isset($this->request->post['affiliate'])) {\n      		$this->data['affiliate'] = $this->request->post['affiliate'];\n    	} elseif (!empty($order_info)) { \n			$this->data['affiliate'] = ($order_info['affiliate_id'] ? $order_info['affiliate_firstname'] . ' ' . $order_info['affiliate_lastname'] : '');\n		} else {\n      		$this->data['affiliate'] = '';\n    	}\n				\n		if (isset($this->request->post['order_status_id'])) {\n      		$this->data['order_status_id'] = $this->request->post['order_status_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['order_status_id'] = $order_info['order_status_id'];\n		} else {\n      		$this->data['order_status_id'] = $this->config->get('config_order_status_id');\n    	}\n			\n		$this->load->model('localisation/order_status');\n		\n		$this->data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();	\n			\n    	if (isset($this->request->post['comment'])) {\n      		$this->data['comment'] = $this->request->post['comment'];\n    	} elseif (!empty($order_info)) { \n			$this->data['comment'] = $order_info['comment'];\n		} else {\n      		$this->data['comment'] = '';\n    	}\n		\n		if (isset($this->request->post['credit_to'])) {\n      		$this->data['credit_to'] = $this->request->post['credit_to'];\n    	} elseif (!empty($order_info)) {\n			$this->data['credit_to'] = $order_info['credit_to'];\n		} else {\n			$this->data['credit_to'] = \"\";//$this->user->getFirstName();\n		}\n		\n		$this->data['source_name'] = array (\n										\"TK\"	=>	\"Tokyo\",\n										\"PTNR\"	=>	\"Partnership\",\n										\"IN\"	=>	\"Inventory\",\n										\"INTK\"	=>	\"Inventory Tokyo\"\n									 );\n		/*$this->data['source_name_ptnr'] = array (\n											\"WW\"		=>	\"WW\",\n											\"EL\"		=>	\"ELIT\",\n											\"TGM\"		=>	\"TGM\",\n											\"BMG\"		=>	\"BMG\",\n											\"AN\"		=>	\"ANITA\",\n											\"JG\"		=>	\"JORG GRAY\",\n											\"SU\"		=>	\"SPEED UP\"\n										 );*/\n		$this->data['source_name_ptnr'] = $this->config->get('partner_name');\n								 \n		$this->data['payment_transfer'] = array (\n											\"TBCA\"		=>	\"BCA\",\n											\"TMAND\"		=>	\"Mandiri\",\n											\"TBNI\"		=>	\"BNI\",\n											\"TBRI\"		=>	\"BRI\",\n											\"TPRMT\"		=>	\"Permata\",\n											\"TNIAGA\"	=>	\"CIMB Niaga\",\n											\"LAZ\"		=>	\"Lazada\",\n											\"ELEVENIA\"		=>	\"Elevenia\",\n											\"TOKOONE\"	=>	\"Toko One\",\n											\"FOC\"		=>	\"FOC\",\n											\"CASH\"		=>	\"Cash\",\n											\"TOKYO\"		=>	\"Tokyo\"\n										 );\n\n		$coupon_info = $this->db->query(\"SELECT * FROM coupon c LEFT JOIN coupon_history ch ON (c.coupon_id = ch.coupon_id) WHERE ch.order_id = '\" . $this->data['order_id'] . \"'\");\n\n		if($coupon_info->num_rows) {\n		$this->data['coupon_code'] = $coupon_info->row['code'];\n		} else {\n		$this->data['coupon_code'] = '';\n		}\n		\n		$this->load->model('sale/customer');\n\n		$this->data['username'] = $this->user->getUserName();\n		\n		if (isset($this->request->post['customer_id'])) {\n			$this->data['addresses'] = $this->model_sale_customer->getAddresses($this->request->post['customer_id']);\n		} elseif (!empty($order_info)) {\n			$this->data['addresses'] = $this->model_sale_customer->getAddresses($order_info['customer_id']);\n		} else {\n			$this->data['addresses'] = array();\n		}\n			\n    	if (isset($this->request->post['payment_firstname'])) {\n      		$this->data['payment_firstname'] = $this->request->post['firstname'];\n		} elseif (!empty($order_info)) { \n			$this->data['payment_firstname'] = $order_info['firstname'];\n		} else {\n      		$this->data['payment_firstname'] = '';\n    	}\n\n    	if (isset($this->request->post['payment_lastname'])) {\n      		$this->data['payment_lastname'] = $this->request->post['lastname'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_lastname'] = $order_info['lastname'];\n		} else {\n      		$this->data['payment_lastname'] = '';\n    	}\n\n    	if (isset($this->request->post['payment_company'])) {\n      		$this->data['payment_company'] = $this->request->post['payment_company'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_company'] = $order_info['payment_company'];\n		} else {\n      		$this->data['payment_company'] = '';\n    	}\n		\n    	if (isset($this->request->post['payment_company_id'])) {\n      		$this->data['payment_company_id'] = $this->request->post['payment_company_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_company_id'] = $order_info['payment_company_id'];\n		} else {\n      		$this->data['payment_company_id'] = '';\n    	}\n		\n    	if (isset($this->request->post['payment_tax_id'])) {\n      		$this->data['payment_tax_id'] = $this->request->post['payment_tax_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_tax_id'] = $order_info['payment_tax_id'];\n		} else {\n      		$this->data['payment_tax_id'] = '';\n    	}\n				\n    	if (isset($this->request->post['payment_address_1'])) {\n      		$this->data['payment_address_1'] = $this->request->post['payment_address_1'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_address_1'] = $order_info['payment_address_1'];\n		} else {\n      		$this->data['payment_address_1'] = '';\n    	}\n\n    	if (isset($this->request->post['payment_address_2'])) {\n      		$this->data['payment_address_2'] = $this->request->post['payment_address_2'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_address_2'] = $order_info['payment_address_2'];\n		} else {\n      		$this->data['payment_address_2'] = '';\n    	}\n		\n    	if (isset($this->request->post['payment_city'])) {\n      		$this->data['payment_city'] = $this->request->post['payment_city'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_city'] = $order_info['payment_city'];\n		} else {\n      		$this->data['payment_city'] = '';\n    	}\n		\n		if (isset($this->request->post['payment_city_id'])) {\n      		$this->data['payment_city_id'] = $this->request->post['payment_city_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_city_id'] = $order_info['payment_city_id'];\n		} else {\n      		$this->data['payment_city_id'] = '';\n    	}\n\n    	if (isset($this->request->post['payment_postcode'])) {\n      		$this->data['payment_postcode'] = $this->request->post['payment_postcode'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_postcode'] = $order_info['payment_postcode'];\n		} else {\n      		$this->data['payment_postcode'] = '';\n    	}\n				\n    	if (isset($this->request->post['payment_country_id'])) {\n      		$this->data['payment_country_id'] = $this->request->post['payment_country_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_country_id'] = $order_info['payment_country_id'];\n		} else {\n      		$this->data['payment_country_id'] = '100';\n    	}		\n	    \n		if (isset($this->request->post['payment_zone_id'])) {\n      		$this->data['payment_zone_id'] = $this->request->post['payment_zone_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['payment_zone_id'] = $order_info['payment_zone_id'];\n		} else {\n      		$this->data['payment_zone_id'] = '';\n    	}\n						\n    	if (isset($this->request->post['payment_number'])) {\n      		$this->data['payment_number'] = $this->request->post['payment_number'];\n    	} else {\n      		$this->data['payment_number'] = array(0=>'');\n    	}\n						\n    	if (isset($this->request->post['payment_method'])) {\n      		$this->data['payment_method'] = $this->request->post['payment_method'];\n    	} elseif (!empty($order_info)) { \n			if(strcmp($order_info['payment_code'], \"bank_transfer\") == 0 && strpos(strtoupper($order_info['payment_method']), 'TRANSFER') !== true) {\n				$this->data['payment_method'] = array();\n				$this->data['payment_number'] = array();\n				$payments = explode(\";\", $order_info['payment_method']);\n				foreach($payments as $value) {\n					$payments = explode(\",\", $value);\n					array_push($this->data['payment_method'], trim($payments[0], \" \"));\n					if(isset($payments[1])) {\n						array_push($this->data['payment_number'], $payments[1]);\n					} else {\n						array_push($this->data['payment_number'], \"\");\n					}\n				}\n			} else {\n				$this->data['payment_method'] = array(0=>$order_info['payment_method']);\n			}\n		} else {\n      		$this->data['payment_method'] = array(0=>'');\n    	}\n		\n    	if (isset($this->request->post['payment_code'])) {\n      		$this->data['payment_code'] = $this->request->post['payment_code'];\n			if(strcmp($this->data['payment_code'], \"bank_transfer\") !== 0) {\n				$order_doku = $this->model_sale_order->getOrderDoku($this->request->get['order_id']);\n				$this->data['doku_status'] = $order_doku[0]['trxstatus'];\n				$this->data['edu_status'] = $order_doku[0]['verifystatus'];\n			}\n    	} elseif (!empty($order_info)) { \n			if(strcmp($order_info['payment_code'], \"bank_transfer\") !== 0) {\n				$order_doku = $this->model_sale_order->getOrderDoku($this->request->get['order_id']);\n				$this->data['doku_status'] = $order_doku[0]['trxstatus'];\n				$this->data['edu_status'] = $order_doku[0]['verifystatus'];\n			}\n			$this->data['payment_code'] = $order_info['payment_code'];\n		} else {\n      		$this->data['payment_code'] = '';\n    	}			\n			\n    	if (isset($this->request->post['shipping_firstname'])) {\n      		$this->data['shipping_firstname'] = $this->request->post['shipping_firstname'];\n		} elseif (!empty($order_info)) { \n			$this->data['shipping_firstname'] = $order_info['shipping_firstname'];\n		} else {\n      		$this->data['shipping_firstname'] = '';\n    	}\n\n    	if (isset($this->request->post['shipping_lastname'])) {\n      		$this->data['shipping_lastname'] = $this->request->post['shipping_lastname'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_lastname'] = $order_info['shipping_lastname'];\n		} else {\n      		$this->data['shipping_lastname'] = '';\n    	}\n		\n		if (isset($this->request->post['shipping_telephone'])) {\n      		$this->data['shipping_telephone'] = $this->request->post['shipping_telephone'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_telephone'] = $order_info['shipping_telephone'];\n		} else {\n      		$this->data['shipping_telephone'] = '';\n    	}\n\n    	if (isset($this->request->post['shipping_company'])) {\n      		$this->data['shipping_company'] = $this->request->post['shipping_company'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_company'] = $order_info['shipping_company'];\n		} else {\n      		$this->data['shipping_company'] = '';\n    	}\n\n    	if (isset($this->request->post['shipping_address_1'])) {\n      		$this->data['shipping_address_1'] = $this->request->post['shipping_address_1'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_address_1'] = $order_info['shipping_address_1'];\n		} else {\n      		$this->data['shipping_address_1'] = '';\n    	}\n\n    	if (isset($this->request->post['shipping_address_2'])) {\n      		$this->data['shipping_address_2'] = $this->request->post['shipping_address_2'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_address_2'] = $order_info['shipping_address_2'];\n		} else {\n      		$this->data['shipping_address_2'] = '';\n    	}\n		\n    	if (isset($this->request->post['shipping_city'])) {\n      		$this->data['shipping_city'] = $order_info['shipping_city'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_city'] = $order_info['shipping_city'];\n		} else {\n      		$this->data['shipping_city'] = '';\n    	}\n		\n		if (isset($this->request->post['shipping_city_id'])) {\n      		$this->data['shipping_city_id'] = $this->request->post['shipping_city_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_city_id'] = $order_info['shipping_city_id'];\n		} else {\n      		$this->data['shipping_city_id'] = '';\n    	}\n		\n    	if (isset($this->request->post['shipping_postcode'])) {\n      		$this->data['shipping_postcode'] = $this->request->post['shipping_postcode'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_postcode'] = $order_info['shipping_postcode'];\n		} else {\n      		$this->data['shipping_postcode'] = '';\n    	}\n				\n    	if (isset($this->request->post['shipping_country_id'])) {\n      		$this->data['shipping_country_id'] = $this->request->post['shipping_country_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_country_id'] = $order_info['shipping_country_id'];\n		} else {\n      		$this->data['shipping_country_id'] = '100';\n    	}		\n	    \n		if (isset($this->request->post['shipping_zone_id'])) {\n      		$this->data['shipping_zone_id'] = $this->request->post['shipping_zone_id'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_zone_id'] = $order_info['shipping_zone_id'];\n		} else {\n      		$this->data['shipping_zone_id'] = '';\n    	}	\n						\n		$this->load->model('localisation/country');\n		\n		$this->data['countries'] = $this->model_localisation_country->getCountries();															\n		\n    	/*if (isset($this->request->post['shipping_method'])) {\n      		// $this->data['shipping_method'] = $this->request->post['shipping_method'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_method'] = $order_info['shipping_method'];\n		} else {\n      		$this->data['shipping_method'] = '';\n    	}	*/\n		\n    	/*if (isset($this->request->post['shipping_code'])) {\n      		$this->data['shipping_code'] = $this->request->post['shipping_code'];\n    	} elseif (!empty($order_info)) { \n			$this->data['shipping_code'] = $order_info['shipping_code'];\n		} else {\n      		$this->data['shipping_code'] = '';\n    	}*/\n		\n		if (isset($this->request->get['order_id'])) {\n			$order_purchase_date = $this->model_sale_order->getOrderPurchaseDate($this->request->get['order_id']);\n			if(!empty($order_purchase_date) && $order_purchase_date['date_generate'] != 0) {\n				$this->data['order_purchase_date'] = $order_purchase_date['date_generate'];\n			}\n		}\n\n		if (isset($this->request->post['order_product'])) {\n			$order_products = $this->request->post['order_product'];\n		} elseif (isset($this->request->get['order_id'])) {\n			$order_products = $this->model_sale_order->getOrderProducts($this->request->get['order_id']);			\n		} else {\n			$order_products = array();\n		}\n		\n		$this->load->model('catalog/product');\n		\n		$this->document->addScript('view/javascript/jquery/ajaxupload.js');\n		\n		$this->data['order_products'] = array();		\n		\n		foreach ($order_products as $order_product) {\n			if (isset($order_product['order_option'])) {\n				$order_option = $order_product['order_option'];\n			} elseif (isset($this->request->get['order_id'])) {\n				$order_option = $this->model_sale_order->getOrderOptions($this->request->get['order_id'], $order_product['order_product_id']);\n			} else {\n				$order_option = array();\n			}\n\n			if (isset($order_product['order_download'])) {\n				$order_download = $order_product['order_download'];\n			} elseif (isset($this->request->get['order_id'])) {\n				$order_download = $this->model_sale_order->getOrderDownloads($this->request->get['order_id'], $order_product['order_product_id']);\n			} else {\n				$order_download = array();\n			}\n											\n			$this->data['order_products'][] = array(\n				'order_product_id' => $order_product['order_product_id'],\n				'product_id'       => $order_product['product_id'],\n				'name'             => $order_product['name'],\n				'model'            => $order_product['model'],\n				'option'           => $order_option,\n				'download'         => $order_download,\n				'quantity'         => $order_product['quantity'],\n				'price'            => $order_product['price'],\n				'total'            => $order_product['total'],\n				'tax'              => $order_product['tax'],\n				'reward'           => $order_product['reward'],\n				'source'           => $order_product['source'],\n				'sent'         	   => $order_product['sent']\n			);\n		}\n		\n		if (isset($this->request->post['order_service'])) {\n			$this->data['order_services'] = $this->request->post['order_service'];\n		} elseif (isset($this->request->get['order_id'])) {\n			$this->data['order_services'] = $this->model_sale_order->getOrderServices($this->request->get['order_id']);\n		} else {\n			$this->data['order_services'] = array();\n		}\n		\n		if (isset($this->request->post['order_voucher'])) {\n			$this->data['order_vouchers'] = $this->request->post['order_voucher'];\n		} elseif (isset($this->request->get['order_id'])) {\n			$this->data['order_vouchers'] = $this->model_sale_order->getOrderVouchers($this->request->get['order_id']);			\n		} else {\n			$this->data['order_vouchers'] = array();\n		}\n       \n		$this->load->model('sale/voucher_theme');\n					\n		$this->data['voucher_themes'] = $this->model_sale_voucher_theme->getVoucherThemes();\n		// echo \"<pre>\";\n						\n		if (isset($this->request->post['order_total'])) {\n      		$this->data['order_totals'] = $this->model_sale_order->getOrderTotals($this->request->get['order_id']);\n    	} elseif (isset($this->request->get['order_id'])) { \n			$this->data['order_totals'] = $this->model_sale_order->getOrderTotals($this->request->get['order_id']);\n		} else {\n      		$this->data['order_totals'] = array();\n    	}\n\n    	foreach($this->data['order_totals'] as $key => $value) {\n    		if ($value['code']==\"total\") {\n    			$this->data['total'] = $value['value'];\n    		}\n    	}\n		\n		if ($action == \"update\") {\n			$this->data['user_group_id'] = $this->user->getUserGroupId();\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			if ($order_info['payment_address_format']) {\n				$format = $order_info['payment_address_format'];\n			} else {\n				$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \"\\n\" . '{country}' . \"\\n\" . 'Tel. {telephone}';\n			}\n			\n			$find = array(\n				'{firstname}',\n				'{lastname}',\n				'{company}',\n				'{address_1}',\n				'{address_2}',\n				'{city}',\n				'{postcode}',\n				'{zone}',\n				'{zone_code}',\n				'{country}',\n				'{telephone}'\n			);\n		\n			$replace = array(\n				'firstname' => $order_info['payment_firstname'],\n				'lastname'  => $order_info['payment_lastname'],\n				'company'   => $order_info['payment_company'],\n				'address_1' => $order_info['payment_address_1'],\n				'address_2' => $order_info['payment_address_2'],\n				'city'      => $order_info['payment_city'],\n				'postcode'  => $order_info['payment_postcode'],\n				'zone'      => $order_info['payment_zone'],\n				'zone_code' => $order_info['payment_zone_code'],\n				'country'   => $order_info['payment_country'],\n				'telephone' => $order_info['telephone']				\n			);\n		\n			$this->data['payment_address'] = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));						\n									\n			if ($order_info['shipping_address_format']) {\n				$format = $order_info['shipping_address_format'];\n			} else {\n				$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \"\\n\" . '{country}' . \"\\n\" . 'Tel. {telephone}';\n			}\n			\n			$find = array(\n				'{firstname}',\n				'{lastname}',\n				'{company}',\n				'{address_1}',\n				'{address_2}',\n				'{city}',\n				'{postcode}',\n				'{zone}',\n				'{zone_code}',\n				'{country}',\n				'{telephone}'\n			);\n		\n			$replace = array(\n				'firstname' => $order_info['shipping_firstname'],\n				'lastname'  => $order_info['shipping_lastname'],\n				'company'   => $order_info['shipping_company'],\n				'address_1' => $order_info['shipping_address_1'],\n				'address_2' => $order_info['shipping_address_2'],\n				'city'      => $order_info['shipping_city'],\n				'postcode'  => $order_info['shipping_postcode'],\n				'zone'      => $order_info['shipping_zone'],\n				'zone_code' => $order_info['shipping_zone_code'],\n				'country'   => $order_info['shipping_country'],\n				'telephone' => $order_info['shipping_telephone']\n			);\n		\n			$this->data['shipping_address'] = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));\n		}\n		\n		if($action == \"insert\") {\n			$this->template = 'sale/order_form_insert.tpl';\n		} elseif($action == \"update\") {\n			$this->template = 'sale/order_form_update.tpl';\n		}\n		$this->children = array(\n			'common/header',\n			'common/footer'\n		);\n		\n		// echo \"<pre>\";\n		// 	print_r($this->data);\n		// echo \"</pre>\";\n		$this->response->setOutput($this->render());\n  	}\n	\n  	private function validateForm() {\n    	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$this->error['warning'] = $this->language->get('error_permission');\n    	}\n\n    	if ((utf8_strlen($this->request->post['firstname']) < 1) || (utf8_strlen($this->request->post['firstname']) > 32)) {\n      		$this->error['firstname'] = $this->language->get('error_firstname');\n      		//echo \"<script type='text/javascript'>alert('Nama');</script>\";\n    	}\n\n    	/*if ((utf8_strlen($this->request->post['lastname']) < 1) || (utf8_strlen($this->request->post['lastname']) > 32)) {\n      		$this->error['lastname'] = $this->language->get('error_lastname');\n    	}*/\n\n    	if ((utf8_strlen($this->request->post['email']) > 96) || (!preg_match('/^[^\\@]+@.*\\.[a-z]{2,6}$/i', $this->request->post['email']))) {\n      		$this->error['email'] = $this->language->get('error_email');\n    	}\n		\n    	if ((utf8_strlen($this->request->post['telephone']) < 3) || (utf8_strlen($this->request->post['telephone']) > 32)) {\n      		$this->error['telephone'] = $this->language->get('error_telephone');\n    	}\n		\n    	/*if ((utf8_strlen($this->request->post['payment_firstname']) < 1) || (utf8_strlen($this->request->post['payment_firstname']) > 32)) {\n      		$this->error['payment_firstname'] = $this->language->get('error_firstname');\n    	}*/\n\n    	/*if ((utf8_strlen($this->request->post['payment_lastname']) < 1) || (utf8_strlen($this->request->post['payment_lastname']) > 32)) {\n      		$this->error['payment_lastname'] = $this->language->get('error_lastname');\n    	}*/\n\n    	if ((utf8_strlen($this->request->post['payment_address_1']) < 3) || (utf8_strlen($this->request->post['payment_address_1']) > 128)) {\n      		$this->error['payment_address_1'] = $this->language->get('error_address_1');\n    	}\n\n    	if ((utf8_strlen($this->request->post['payment_city']) < 3) || (utf8_strlen($this->request->post['payment_city']) > 128)) {\n      		$this->error['payment_city'] = $this->language->get('error_city');\n    	}\n		\n		$this->load->model('localisation/country');\n		\n		if ((utf8_strlen($this->request->post['payment_postcode']) < 2) || (utf8_strlen($this->request->post['payment_postcode']) > 10)) {\n			$this->error['payment_postcode'] = $this->language->get('error_postcode');\n		}\n		\n    	/*if ($this->request->post['payment_method'][0] == '' || strpos(strtoupper($this->request->post['payment_method'][0]), 'TRANSFER') !== false) {\n      		//$this->error['payment_zone'] = $this->language->get('error_zone');\n			$this->error['payment_method'] = $this->language->get('error_payment');\n    	}*/\n\n		/*if ($this->request->post['payment_method'][0] == 'LAZ' || $this->request->post['payment_method'][0] == 'TOKOONE' || $this->request->post['payment_method'][0] == 'ELEVENIA') {\n			if($this->request->post['payment_number'][0] == '') {\n				$this->error['payment_number'] = \"Warning: Payment number required!\";\n			}\n    	}*/\n		\n    	/*if (count($this->request->post['payment_method']) > 1) {\n			foreach($this->request->post['payment_method'] as $key => $value) {\n				if($this->request->post['payment_method'][$key] == '') {\n					unset($this->request->post['payment_method'][$key]);\n					unset($this->request->post['payment_number'][$key]);\n				}\n			}\n			if (count($this->request->post['payment_method']) > 1) {\n				foreach($this->request->post['payment_number'] as $key => $value) {\n					if($value == '') {\n						$this->error['payment_number'] = \"Warning: Payment number required!\";\n						break;\n					}\n				}\n			}\n    	}*/		\n		\n		/*if (!$this->request->post['payment_method']) {\n			$this->error['payment_method'] = $this->language->get('error_payment');\n		}*/	\n					\n		// Check if any products require shipping\n		$shipping = true;\n		\n		/*if (isset($this->request->post['order_product'])) {\n			$this->load->model('catalog/product');\n			\n			foreach ($this->request->post['order_product'] as $order_product) {\n				$product_info = $this->model_catalog_product->getProduct($order_product['product_id']);\n			\n				if ($product_info && $product_info['shipping']) {\n					$shipping = true;\n				}\n				\n				if($order_product['source'] == '' || $order_product['source'] == 'PTNR') {\n					$this->error['source'] = \"Warning: Source required!\";\n				}\n				\n				if($order_product['sent'] == '') {\n					$this->error['sent'] = \"Warning: Sent required!\";\n				}\n			}\n		}\n		\n		if (isset($this->request->post['order_service'])) {\n			foreach ($this->request->post['order_service'] as $order_service) {\n				if($order_service['source'] == '' || $order_service['source'] == 'PTNR') {\n					$this->error['source'] = \"Warning: Source required!\";\n				}\n				\n				if($order_service['sent'] == '') {\n					$this->error['sent'] = \"Warning: Sent required!\";\n				}\n			}\n		}*/\n		\n		if ($shipping) {\n			if ((utf8_strlen($this->request->post['shipping_firstname']) < 1) || (utf8_strlen($this->request->post['shipping_firstname']) > 32)) {\n				$this->error['shipping_firstname'] = $this->language->get('error_firstname');\n			}\n	\n			/*if ((utf8_strlen($this->request->post['shipping_lastname']) < 1) || (utf8_strlen($this->request->post['shipping_lastname']) > 32)) {\n				$this->error['shipping_lastname'] = $this->language->get('error_lastname');\n			}*/\n			\n			if ((utf8_strlen($this->request->post['shipping_telephone']) < 3) || (utf8_strlen($this->request->post['shipping_telephone']) > 32)) {\n				$this->error['shipping_telephone'] = $this->language->get('error_telephone');\n			}\n			\n			if ((utf8_strlen($this->request->post['shipping_address_1']) < 3) || (utf8_strlen($this->request->post['shipping_address_1']) > 128)) {\n				$this->error['shipping_address_1'] = $this->language->get('error_address_1');\n			}\n	\n\n			if ((utf8_strlen($this->request->post['shipping_postcode']) < 2) || (utf8_strlen($this->request->post['shipping_postcode']) > 10)) {\n				$this->error['shipping_postcode'] = $this->language->get('error_postcode');\n			}\n			/*if (!$this->request->post['shipping_method']) {\n				$this->error['shipping_method'] = $this->language->get('error_shipping');\n			}			*/\n		}\n		\n		/* Credit To 6-1-2015 */\n		if ($this->request->post['credit_to'] == \"\") {\n			$this->error['credit_to'] = \"Warning: Credit required!\";\n		}\n		\n		/* END */\n		if (((utf8_strlen($this->request->post['shipping_city']) < 3) || (utf8_strlen($this->request->post['shipping_city']) > 128)) || (!$this->request->post['shipping_method']) || ($this->error)) {\n			$this->error['shipping_city'] = $this->language->get('error_city');\n			$this->error['shipping_method'] = $this->language->get('error_shipping');\n		}\n\n		if ($this->error && !isset($this->error['warning'])) {\n			$this->error['warning'] = $this->language->get('error_warning');\n		}\n		\n		if (!$this->error) {\n	  		return true;\n		} else {\n	  		return false;\n		}\n  	}    \n	\n   	private function validateDelete() {\n    	if (!$this->user->hasPermission('modify', 'sale/order')) {\n			$this->error['warning'] = $this->language->get('error_permission');\n    	}\n\n		if (!$this->error) {\n	  		return true;\n		} else {\n	  		return false;\n		}\n  	}\n	\n	public function country() {\n		$json = array();\n		\n		$this->load->model('localisation/country');\n\n    	$country_info = $this->model_localisation_country->getCountry($this->request->get['country_id']);\n		\n		if ($country_info) {\n			$this->load->model('localisation/zone');\n\n			$json = array(\n				'country_id'        => $country_info['country_id'],\n				'name'              => $country_info['name'],\n				'iso_code_2'        => $country_info['iso_code_2'],\n				'iso_code_3'        => $country_info['iso_code_3'],\n				'address_format'    => $country_info['address_format'],\n				'postcode_required' => $country_info['postcode_required'],\n				'zone'              => $this->model_localisation_zone->getZonesByCountryId($this->request->get['country_id']),\n				'status'            => $country_info['status']		\n			);\n		}\n		\n		$this->response->setOutput(json_encode($json));\n	}\n		\n	public function info() {\n		$this->load->model('sale/order');\n\n		if (isset($this->request->get['order_id'])) {\n			$order_id = $this->request->get['order_id'];\n		} else {\n			$order_id = 0;\n		}\n		\n		$order_info = $this->model_sale_order->getOrder($order_id);\n		/*echo \"<pre>\";\n		print_r($order_info);\n		echo \"</pre>\";*/\n		if ($order_info) {\n			$this->load->language('sale/order');\n\n			$this->document->setTitle($this->language->get('heading_title'));\n\n			$this->data['heading_title'] = $this->language->get('heading_title');\n			\n			$this->data['text_order_id'] = $this->language->get('text_order_id');\n			$this->data['text_invoice_no'] = $this->language->get('text_invoice_no');\n			$this->data['text_invoice_date'] = $this->language->get('text_invoice_date');\n			$this->data['text_store_name'] = $this->language->get('text_store_name');\n			$this->data['text_store_url'] = $this->language->get('text_store_url');		\n			$this->data['text_customer'] = $this->language->get('text_customer');\n			$this->data['text_customer_group'] = $this->language->get('text_customer_group');\n			$this->data['text_email'] = $this->language->get('text_email');\n			$this->data['text_telephone'] = $this->language->get('text_telephone');\n			$this->data['text_fax'] = $this->language->get('text_fax');\n			$this->data['text_total'] = $this->language->get('text_total');\n			$this->data['text_reward'] = $this->language->get('text_reward');		\n			$this->data['text_order_status'] = $this->language->get('text_order_status');\n			$this->data['text_comment'] = $this->language->get('text_comment');\n			$this->data['text_credit_to'] = \"Credit:\";\n			$this->data['text_affiliate'] = $this->language->get('text_affiliate');\n			$this->data['text_commission'] = $this->language->get('text_commission');\n			$this->data['text_ip'] = $this->language->get('text_ip');\n			$this->data['text_forwarded_ip'] = $this->language->get('text_forwarded_ip');\n			$this->data['text_user_agent'] = $this->language->get('text_user_agent');\n			$this->data['text_accept_language'] = $this->language->get('text_accept_language');\n			$this->data['text_date_added'] = $this->language->get('text_date_added');\n			$this->data['text_date_modified'] = $this->language->get('text_date_modified');			\n			$this->data['text_firstname'] = $this->language->get('text_firstname');\n			$this->data['text_lastname'] = $this->language->get('text_lastname');\n			$this->data['text_company'] = $this->language->get('text_company');\n			$this->data['text_company_id'] = $this->language->get('text_company_id');\n			$this->data['text_tax_id'] = $this->language->get('text_tax_id');\n			$this->data['text_address_1'] = $this->language->get('text_address_1');\n			$this->data['text_address_2'] = $this->language->get('text_address_2');\n			$this->data['text_city'] = $this->language->get('text_city');\n			$this->data['text_postcode'] = $this->language->get('text_postcode');\n			$this->data['text_zone'] = $this->language->get('text_zone');\n			$this->data['text_zone_code'] = $this->language->get('text_zone_code');\n			$this->data['text_country'] = $this->language->get('text_country');\n			$this->data['text_shipping_method'] = $this->language->get('text_shipping_method');\n			$this->data['text_payment_method'] = $this->language->get('text_payment_method');	\n			$this->data['text_download'] = $this->language->get('text_download');\n			$this->data['text_wait'] = $this->language->get('text_wait');\n			$this->data['text_generate'] = $this->language->get('text_generate');\n			$this->data['text_reward_add'] = $this->language->get('text_reward_add');\n			$this->data['text_reward_remove'] = $this->language->get('text_reward_remove');\n			$this->data['text_commission_add'] = $this->language->get('text_commission_add');\n			$this->data['text_commission_remove'] = $this->language->get('text_commission_remove');\n			$this->data['text_credit_add'] = $this->language->get('text_credit_add');\n			$this->data['text_credit_remove'] = $this->language->get('text_credit_remove');\n			$this->data['text_country_match'] = $this->language->get('text_country_match');\n			$this->data['text_country_code'] = $this->language->get('text_country_code');\n			$this->data['text_high_risk_country'] = $this->language->get('text_high_risk_country');\n			$this->data['text_distance'] = $this->language->get('text_distance');\n			$this->data['text_ip_region'] = $this->language->get('text_ip_region');\n			$this->data['text_ip_city'] = $this->language->get('text_ip_city');\n			$this->data['text_ip_latitude'] = $this->language->get('text_ip_latitude');\n			$this->data['text_ip_longitude'] = $this->language->get('text_ip_longitude');\n			$this->data['text_ip_isp'] = $this->language->get('text_ip_isp');\n			$this->data['text_ip_org'] = $this->language->get('text_ip_org');\n			$this->data['text_ip_asnum'] = $this->language->get('text_ip_asnum');\n			$this->data['text_ip_user_type'] = $this->language->get('text_ip_user_type');\n			$this->data['text_ip_country_confidence'] = $this->language->get('text_ip_country_confidence');\n			$this->data['text_ip_region_confidence'] = $this->language->get('text_ip_region_confidence');\n			$this->data['text_ip_city_confidence'] = $this->language->get('text_ip_city_confidence');\n			$this->data['text_ip_postal_confidence'] = $this->language->get('text_ip_postal_confidence');\n			$this->data['text_ip_postal_code'] = $this->language->get('text_ip_postal_code');\n			$this->data['text_ip_accuracy_radius'] = $this->language->get('text_ip_accuracy_radius');\n			$this->data['text_ip_net_speed_cell'] = $this->language->get('text_ip_net_speed_cell');\n			$this->data['text_ip_metro_code'] = $this->language->get('text_ip_metro_code');\n			$this->data['text_ip_area_code'] = $this->language->get('text_ip_area_code');\n			$this->data['text_ip_time_zone'] = $this->language->get('text_ip_time_zone');\n			$this->data['text_ip_region_name'] = $this->language->get('text_ip_region_name');\n			$this->data['text_ip_domain'] = $this->language->get('text_ip_domain');\n			$this->data['text_ip_country_name'] = $this->language->get('text_ip_country_name');\n			$this->data['text_ip_continent_code'] = $this->language->get('text_ip_continent_code');\n			$this->data['text_ip_corporate_proxy'] = $this->language->get('text_ip_corporate_proxy');\n			$this->data['text_anonymous_proxy'] = $this->language->get('text_anonymous_proxy');\n			$this->data['text_proxy_score'] = $this->language->get('text_proxy_score');\n			$this->data['text_is_trans_proxy'] = $this->language->get('text_is_trans_proxy');\n			$this->data['text_free_mail'] = $this->language->get('text_free_mail');\n			$this->data['text_carder_email'] = $this->language->get('text_carder_email');\n			$this->data['text_high_risk_username'] = $this->language->get('text_high_risk_username');\n			$this->data['text_high_risk_password'] = $this->language->get('text_high_risk_password');\n			$this->data['text_bin_match'] = $this->language->get('text_bin_match');\n			$this->data['text_bin_country'] = $this->language->get('text_bin_country');\n			$this->data['text_bin_name_match'] = $this->language->get('text_bin_name_match');\n			$this->data['text_bin_name'] = $this->language->get('text_bin_name');\n			$this->data['text_bin_phone_match'] = $this->language->get('text_bin_phone_match');\n			$this->data['text_bin_phone'] = $this->language->get('text_bin_phone');\n			$this->data['text_customer_phone_in_billing_location'] = $this->language->get('text_customer_phone_in_billing_location');\n			$this->data['text_ship_forward'] = $this->language->get('text_ship_forward');\n			$this->data['text_city_postal_match'] = $this->language->get('text_city_postal_match');\n			$this->data['text_ship_city_postal_match'] = $this->language->get('text_ship_city_postal_match');\n			$this->data['text_score'] = $this->language->get('text_score');\n			$this->data['text_explanation'] = $this->language->get('text_explanation');\n			$this->data['text_risk_score'] = $this->language->get('text_risk_score');\n			$this->data['text_queries_remaining'] = $this->language->get('text_queries_remaining');\n			$this->data['text_maxmind_id'] = $this->language->get('text_maxmind_id');\n			$this->data['text_error'] = $this->language->get('text_error');\n			$this->data['text_payment_confirmation_code'] = \"Kode Konfirmasi\";\n							\n			$this->data['column_product'] = $this->language->get('column_product');\n			$this->data['column_model'] = $this->language->get('column_model');\n			$this->data['column_quantity'] = $this->language->get('column_quantity');\n			$this->data['column_price'] = $this->language->get('column_price');\n			$this->data['column_total'] = $this->language->get('column_total');\n			$this->data['column_download'] = $this->language->get('column_download');\n			$this->data['column_filename'] = $this->language->get('column_filename');\n			$this->data['column_remaining'] = $this->language->get('column_remaining');\n						\n			$this->data['entry_order_status'] = $this->language->get('entry_order_status');\n			$this->data['entry_notify'] = $this->language->get('entry_notify');\n			$this->data['entry_comment'] = $this->language->get('entry_comment');\n			$this->data['entry_credit_to'] = \"Credit:\";\n			\n			$this->data['button_invoice'] = $this->language->get('button_invoice');\n			$this->data['button_cancel'] = $this->language->get('button_cancel');\n			$this->data['button_back'] = $this->language->get('button_cancel');\n			$this->data['button_add_history'] = $this->language->get('button_add_history');\n		\n			$this->data['tab_order'] = $this->language->get('tab_order');\n			$this->data['tab_payment'] = $this->language->get('tab_payment');\n			$this->data['tab_shipping'] = $this->language->get('tab_shipping');\n			$this->data['tab_product'] = $this->language->get('tab_product');\n			$this->data['tab_order_history'] = $this->language->get('tab_order_history');\n			$this->data['tab_fraud'] = $this->language->get('tab_fraud');\n		\n			$this->data['token'] = $this->session->data['token'];\n\n			$url = '';\n\n			if (isset($this->request->get['filter_order_id'])) {\n				$url .= '&filter_order_id=' . $this->request->get['filter_order_id'];\n			}\n			\n			if (isset($this->request->get['filter_customer'])) {\n				$url .= '&filter_customer=' . urlencode(html_entity_decode($this->request->get['filter_customer'], ENT_QUOTES, 'UTF-8'));\n			}\n												\n			if (isset($this->request->get['filter_order_status_id'])) {\n				$url .= '&filter_order_status_id=' . $this->request->get['filter_order_status_id'];\n			}\n			\n			if (isset($this->request->get['filter_total'])) {\n				$url .= '&filter_total=' . $this->request->get['filter_total'];\n			}\n						\n			if (isset($this->request->get['filter_date_added'])) {\n				$url .= '&filter_date_added=' . $this->request->get['filter_date_added'];\n			}\n			\n			if (isset($this->request->get['filter_date_modified'])) {\n				$url .= '&filter_date_modified=' . $this->request->get['filter_date_modified'];\n			}\n\n			if (isset($this->request->get['sort'])) {\n				$url .= '&sort=' . $this->request->get['sort'];\n			}\n\n			if (isset($this->request->get['order'])) {\n				$url .= '&order=' . $this->request->get['order'];\n			}\n\n			if (isset($this->request->get['page'])) {\n				$url .= '&page=' . $this->request->get['page'];\n			}\n\n			$this->data['breadcrumbs'] = array();\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('text_home'),\n				'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),\n				'separator' => false\n			);\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('heading_title'),\n				'href'      => $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL'),				\n				'separator' => ' :: '\n			);\n\n			$this->data['invoice'] = $this->url->link('sale/ordercw/invoice', 'token=' . $this->session->data['token'] . '&order_id=' . (int)$this->request->get['order_id'], 'SSL');\n			$this->data['cancel'] = $this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL');\n\n			$this->data['order_id'] = $this->request->get['order_id'];\n			\n			if ($order_info['invoice_no']) {\n				$this->data['invoice_no'] = $order_info['invoice_prefix'] . $order_info['invoice_no'];\n			} else {\n				$this->data['invoice_no'] = '';\n			}\n			\n			/*if ($order_info['shipping_receipt']) {\n				$this->data['shipping_receipt'] = $order_info['shipping_receipt'];\n			} else {\n				$this->data['shipping_receipt'] = '';\n			}*/\n			\n			$this->data['store_name'] = $order_info['store_name'];\n			$this->data['store_url'] = $order_info['store_url'];\n			$this->data['firstname'] = $order_info['firstname'];\n			$this->data['lastname'] = $order_info['lastname'];\n						\n			if ($order_info['customer_id']) {\n				$this->data['customer'] = $this->url->link('sale/customer/update', 'token=' . $this->session->data['token'] . '&customer_id=' . $order_info['customer_id'], 'SSL');\n			} else {\n				$this->data['customer'] = '';\n			}\n\n			$this->load->model('sale/customer_group');\n\n			$customer_group_info = $this->model_sale_customer_group->getCustomerGroup($order_info['customer_group_id']);\n\n			if ($customer_group_info) {\n				$this->data['customer_group'] = $customer_group_info['name'];\n			} else {\n				$this->data['customer_group'] = '';\n			}\n\n			$this->data['email'] = $order_info['email'];\n			$this->data['telephone'] = $order_info['telephone'];\n			$this->data['fax'] = $order_info['fax'];\n			$this->data['comment'] = nl2br($order_info['comment']);\n			$this->data['credit_to'] = $order_info['credit_to'];\n			$this->data['shipping_method'] = $order_info['shipping_method'];\n			$this->data['shipping_receipt'] = $order_info['shipping_receipt'];\n			$this->data['payment_method'] = $order_info['payment_method'];\n			$this->data['payment_confirmation_code'] = $order_info['payment_confirmation_code'];\n			$this->data['total'] = $this->currency->format($order_info['total'], $order_info['currency_code'], $order_info['currency_value']);\n			\n			if ($order_info['total'] < 0) {\n				$this->data['credit'] = $order_info['total'];\n			} else {\n				$this->data['credit'] = 0;\n			}\n			\n			$this->load->model('sale/customer');\n						\n			$this->data['credit_total'] = $this->model_sale_customer->getTotalTransactionsByOrderId($this->request->get['order_id']); \n			\n			$this->data['reward'] = $order_info['reward'];\n						\n			$this->data['reward_total'] = $this->model_sale_customer->getTotalCustomerRewardsByOrderId($this->request->get['order_id']);\n\n			$this->data['affiliate_firstname'] = $order_info['affiliate_firstname'];\n			$this->data['affiliate_lastname'] = $order_info['affiliate_lastname'];\n			\n			if ($order_info['affiliate_id']) {\n				$this->data['affiliate'] = $this->url->link('sale/affiliate/update', 'token=' . $this->session->data['token'] . '&affiliate_id=' . $order_info['affiliate_id'], 'SSL');\n			} else {\n				$this->data['affiliate'] = '';\n			}\n			\n			$this->data['commission'] = $this->currency->format($order_info['commission'], $order_info['currency_code'], $order_info['currency_value']);\n						\n			$this->load->model('sale/affiliate');\n			\n			$this->data['commission_total'] = $this->model_sale_affiliate->getTotalTransactionsByOrderId($this->request->get['order_id']); \n\n			$this->load->model('localisation/order_status');\n\n			$order_status_info = $this->model_localisation_order_status->getOrderStatus($order_info['order_status_id']);\n\n			if ($order_status_info) {\n				$this->data['order_status'] = $order_status_info['name'];\n			} else {\n				$this->data['order_status'] = '';\n			}\n			\n			$this->data['ip'] = $order_info['ip'];\n			$this->data['forwarded_ip'] = $order_info['forwarded_ip'];\n			$this->data['user_agent'] = $order_info['user_agent'];\n			$this->data['accept_language'] = $order_info['accept_language'];\n			$this->data['date_added'] = date($this->language->get('date_format_short'), strtotime($order_info['date_added']));\n			$this->data['date_modified'] = date($this->language->get('date_format_short'), strtotime($order_info['date_modified']));		\n			$this->data['payment_firstname'] = $order_info['payment_firstname'];\n			$this->data['payment_lastname'] = $order_info['payment_lastname'];\n			$this->data['payment_company'] = $order_info['payment_company'];\n			$this->data['payment_company_id'] = $order_info['payment_company_id'];\n			$this->data['payment_tax_id'] = $order_info['payment_tax_id'];\n			$this->data['payment_address_1'] = $order_info['payment_address_1'];\n			$this->data['payment_address_2'] = $order_info['payment_address_2'];\n			$this->data['payment_city'] = $order_info['payment_city'];\n			$this->data['payment_postcode'] = $order_info['payment_postcode'];\n			$this->data['payment_zone'] = $order_info['payment_zone'];\n			$this->data['payment_zone_code'] = $order_info['payment_zone_code'];\n			$this->data['payment_country'] = $order_info['payment_country'];			\n			$this->data['shipping_firstname'] = $order_info['shipping_firstname'];\n			$this->data['shipping_lastname'] = $order_info['shipping_lastname'];\n			$this->data['shipping_company'] = $order_info['shipping_company'];\n			$this->data['shipping_address_1'] = $order_info['shipping_address_1'];\n			$this->data['shipping_address_2'] = $order_info['shipping_address_2'];\n			$this->data['shipping_city'] = $order_info['shipping_city'];\n			$this->data['shipping_city_id'] = $order_info['shipping_city_id'];\n			$this->data['shipping_postcode'] = $order_info['shipping_postcode'];\n			$this->data['shipping_zone'] = $order_info['shipping_zone'];\n			$this->data['shipping_zone_code'] = $order_info['shipping_zone_code'];\n			$this->data['shipping_country'] = $order_info['shipping_country'];\n\n			$this->data['products'] = array();\n			$this->data['products_return'] = array();\n\n			$products = $this->model_sale_order->getOrderProducts($this->request->get['order_id']);\n			$this->load->model('catalog/product');\n			$this->load->model('tool/image');\n			$this->load->model('sale/return');\n			$data = array('filter_order_id'	=> $this->request->get['order_id']);\n			$products_return = $this->model_sale_return->getReturns($data);\n\n			/*echo \"<pre>\";\n				print_r($products);\n			echo \"</pre>\";*/\n			foreach ($products as $product) {\n				$option_data = array();\n\n				$options = $this->model_sale_order->getOrderOptions($this->request->get['order_id'], $product['order_product_id']);\n\n				foreach ($options as $option) {\n					if ($option['type'] != 'file') {\n						$option_data[] = array(\n							'name'  => $option['name'],\n							'value' => $option['value'],\n							'type'  => $option['type']\n						);\n					} else {\n						$option_data[] = array(\n							'name'  => $option['name'],\n							'value' => utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.')),\n							'type'  => $option['type'],\n							'href'  => $this->url->link('sale/order/download', 'token=' . $this->session->data['token'] . '&order_id=' . $this->request->get['order_id'] . '&order_option_id=' . $option['order_option_id'], 'SSL')\n						);						\n					}\n				}\n				$result = $this->model_catalog_product->getProduct($product['product_id']);\n				if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {\n					$image = $this->model_tool_image->resize($result['image'], 40, 40);\n				} else {\n					$imagepng = str_replace('.jpg', '.png', $result['image']);\n					if(file_exists(DIR_IMAGE . $imagepng)) {\n						$image = $this->model_tool_image->resize($imagepng, 40, 40);\n					} else {\n						$image = $this->model_tool_image->resize('product/no_image.jpg', 40, 40);\n					}\n				}\n\n				$this->data['products'][] = array(\n					'order_product_id' => $product['order_product_id'],\n					'product_id'       => $product['product_id'],\n					'name'    	 	   => $product['name'],\n					'model'    		   => $product['model'],\n					'option'   		   => $option_data,\n					'quantity'		   => $product['quantity'],\n					'price'    		   => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),\n					'total'    		   => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']),\n					'href'     		   => $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $product['product_id'], 'SSL'),\n					'sent'    	 	   => $product['sent'],\n					'source'   	 	   => $product['source'],\n					'image'			   => $image\n				);\n				\n				foreach ($products_return as $product_return) {\n					if($product['order_product_id'] == $product_return['order_product_id']) {\n						end($this->data['products']);\n						$key = key($this->data['products']);\n						$this->data['products'][$key] += array (\n							'return_id'		=> $product_return['return_id'],\n							'href_return'	=> $this->url->link('sale/return/info', 'token=' . $this->session->data['token'] . '&return_id=' . $product_return['return_id'], 'SSL')\n						);\n					}\n				}\n			}\n			\n			$this->data['services'] = array();	\n			\n			$services = $this->model_sale_order->getOrderServices($this->request->get['order_id']);\n			 \n			foreach ($services as $service) {\n				$this->data['services'][] = array(\n					'service'	  => $service['service'],\n					'description' => $service['description'],\n					'quantity' => $service['quantity'],\n					'price'      => $this->currency->format($service['price'], $order_info['currency_code'], $order_info['currency_value']),\n					'total'      => $this->currency->format($service['total'], $order_info['currency_code'], $order_info['currency_value']),\n					'sent'    	 	   => $service['sent'],\n					'source'   	 	   => $service['source']\n				);\n				\n				foreach ($products_return as $product_return) {\n					if($service['order_service_id'] == $product_return['order_service_id']) {\n						end($this->data['services']);\n						$key = key($this->data['services']);\n						$this->data['services'][$key] += array (\n							'return_id'		=> $product_return['return_id'],\n							'href_return'	=> $this->url->link('sale/return/info', 'token=' . $this->session->data['token'] . '&return_id=' . $product_return['return_id'], 'SSL')\n						);\n					}\n				}\n			}\n		\n			$this->data['vouchers'] = array();	\n			\n			$vouchers = $this->model_sale_order->getOrderVouchers($this->request->get['order_id']);\n			 \n			foreach ($vouchers as $voucher) {\n				$this->data['vouchers'][] = array(\n					'description' => $voucher['description'],\n					'amount'      => $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']),\n					'href'        => $this->url->link('sale/voucher/update', 'token=' . $this->session->data['token'] . '&voucher_id=' . $voucher['voucher_id'], 'SSL')\n				);\n			}\n		\n			$this->data['totals'] = $this->model_sale_order->getOrderTotals($this->request->get['order_id']);\n\n			$this->data['downloads'] = array();\n\n			foreach ($products as $product) {\n				$results = $this->model_sale_order->getOrderDownloads($this->request->get['order_id'], $product['order_product_id']);\n	\n				foreach ($results as $result) {\n					$this->data['downloads'][] = array(\n						'name'      => $result['name'],\n						'filename'  => $result['mask'],\n						'remaining' => $result['remaining']\n					);\n				}\n			}\n			\n			$this->data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();\n\n			// Fraud\n			$this->load->model('sale/fraud');\n			\n			$fraud_info = $this->model_sale_fraud->getFraud($order_info['order_id']);\n			\n			if ($fraud_info) {\n				$this->data['country_match'] = $fraud_info['country_match'];\n				\n				if ($fraud_info['country_code']) {\n					$this->data['country_code'] = $fraud_info['country_code'];\n				} else {\n					$this->data['country_code'] = '';\n				}\n				\n				$this->data['high_risk_country'] = $fraud_info['high_risk_country'];\n				$this->data['distance'] = $fraud_info['distance'];\n				\n				if ($fraud_info['ip_region']) {\n					$this->data['ip_region'] = $fraud_info['ip_region'];\n				} else {\n					$this->data['ip_region'] = '';\n				}\n								\n				if ($fraud_info['ip_city']) {\n					$this->data['ip_city'] = $fraud_info['ip_city'];\n				} else {\n					$this->data['ip_city'] = '';\n				}\n				\n				$this->data['ip_latitude'] = $fraud_info['ip_latitude'];\n				$this->data['ip_longitude'] = $fraud_info['ip_longitude'];\n\n				if ($fraud_info['ip_isp']) {\n					$this->data['ip_isp'] = $fraud_info['ip_isp'];\n				} else {\n					$this->data['ip_isp'] = '';\n				}\n				\n				if ($fraud_info['ip_org']) {\n					$this->data['ip_org'] = $fraud_info['ip_org'];\n				} else {\n					$this->data['ip_org'] = '';\n				}\n								\n				$this->data['ip_asnum'] = $fraud_info['ip_asnum'];\n				\n				if ($fraud_info['ip_user_type']) {\n					$this->data['ip_user_type'] = $fraud_info['ip_user_type'];\n				} else {\n					$this->data['ip_user_type'] = '';\n				}\n				\n				if ($fraud_info['ip_country_confidence']) {\n					$this->data['ip_country_confidence'] = $fraud_info['ip_country_confidence'];\n				} else {\n					$this->data['ip_country_confidence'] = '';\n				}\n												\n				if ($fraud_info['ip_region_confidence']) {\n					$this->data['ip_region_confidence'] = $fraud_info['ip_region_confidence'];\n				} else {\n					$this->data['ip_region_confidence'] = '';\n				}\n				\n				if ($fraud_info['ip_city_confidence']) {\n					$this->data['ip_city_confidence'] = $fraud_info['ip_city_confidence'];\n				} else {\n					$this->data['ip_city_confidence'] = '';\n				}\n				\n				if ($fraud_info['ip_postal_confidence']) {\n					$this->data['ip_postal_confidence'] = $fraud_info['ip_postal_confidence'];\n				} else {\n					$this->data['ip_postal_confidence'] = '';\n				}\n				\n				if ($fraud_info['ip_postal_code']) {\n					$this->data['ip_postal_code'] = $fraud_info['ip_postal_code'];\n				} else {\n					$this->data['ip_postal_code'] = '';\n				}\n								\n				$this->data['ip_accuracy_radius'] = $fraud_info['ip_accuracy_radius'];\n				\n				if ($fraud_info['ip_net_speed_cell']) {\n					$this->data['ip_net_speed_cell'] = $fraud_info['ip_net_speed_cell'];\n				} else {\n					$this->data['ip_net_speed_cell'] = '';\n				}\n								\n				$this->data['ip_metro_code'] = $fraud_info['ip_metro_code'];\n				$this->data['ip_area_code'] = $fraud_info['ip_area_code'];\n				\n				if ($fraud_info['ip_time_zone']) {\n					$this->data['ip_time_zone'] = $fraud_info['ip_time_zone'];\n				} else {\n					$this->data['ip_time_zone'] = '';\n				}\n\n				if ($fraud_info['ip_region_name']) {\n					$this->data['ip_region_name'] = $fraud_info['ip_region_name'];\n				} else {\n					$this->data['ip_region_name'] = '';\n				}				\n				\n				if ($fraud_info['ip_domain']) {\n					$this->data['ip_domain'] = $fraud_info['ip_domain'];\n				} else {\n					$this->data['ip_domain'] = '';\n				}\n				\n				if ($fraud_info['ip_country_name']) {\n					$this->data['ip_country_name'] = $fraud_info['ip_country_name'];\n				} else {\n					$this->data['ip_country_name'] = '';\n				}	\n								\n				if ($fraud_info['ip_continent_code']) {\n					$this->data['ip_continent_code'] = $fraud_info['ip_continent_code'];\n				} else {\n					$this->data['ip_continent_code'] = '';\n				}\n				\n				if ($fraud_info['ip_corporate_proxy']) {\n					$this->data['ip_corporate_proxy'] = $fraud_info['ip_corporate_proxy'];\n				} else {\n					$this->data['ip_corporate_proxy'] = '';\n				}\n								\n				$this->data['anonymous_proxy'] = $fraud_info['anonymous_proxy'];\n				$this->data['proxy_score'] = $fraud_info['proxy_score'];\n				\n				if ($fraud_info['is_trans_proxy']) {\n					$this->data['is_trans_proxy'] = $fraud_info['is_trans_proxy'];\n				} else {\n					$this->data['is_trans_proxy'] = '';\n				}	\n							\n				$this->data['free_mail'] = $fraud_info['free_mail'];\n				$this->data['carder_email'] = $fraud_info['carder_email'];\n				\n				if ($fraud_info['high_risk_username']) {\n					$this->data['high_risk_username'] = $fraud_info['high_risk_username'];\n				} else {\n					$this->data['high_risk_username'] = '';\n				}\n							\n				if ($fraud_info['high_risk_password']) {\n					$this->data['high_risk_password'] = $fraud_info['high_risk_password'];\n				} else {\n					$this->data['high_risk_password'] = '';\n				}		\n				\n				$this->data['bin_match'] = $fraud_info['bin_match'];\n\n				if ($fraud_info['bin_country']) {\n					$this->data['bin_country'] = $fraud_info['bin_country'];\n				} else {\n					$this->data['bin_country'] = '';\n				}	\n								\n				$this->data['bin_name_match'] = $fraud_info['bin_name_match'];\n				\n				if ($fraud_info['bin_name']) {\n					$this->data['bin_name'] = $fraud_info['bin_name'];\n				} else {\n					$this->data['bin_name'] = '';\n				}	\n								\n				$this->data['bin_phone_match'] = $fraud_info['bin_phone_match'];\n\n				if ($fraud_info['bin_phone']) {\n					$this->data['bin_phone'] = $fraud_info['bin_phone'];\n				} else {\n					$this->data['bin_phone'] = '';\n				}	\n				\n				if ($fraud_info['customer_phone_in_billing_location']) {\n					$this->data['customer_phone_in_billing_location'] = $fraud_info['customer_phone_in_billing_location'];\n				} else {\n					$this->data['customer_phone_in_billing_location'] = '';\n				}	\n												\n				$this->data['ship_forward'] = $fraud_info['ship_forward'];\n\n				if ($fraud_info['city_postal_match']) {\n					$this->data['city_postal_match'] = $fraud_info['city_postal_match'];\n				} else {\n					$this->data['city_postal_match'] = '';\n				}	\n				\n				if ($fraud_info['ship_city_postal_match']) {\n					$this->data['ship_city_postal_match'] = $fraud_info['ship_city_postal_match'];\n				} else {\n					$this->data['ship_city_postal_match'] = '';\n				}	\n								\n				$this->data['score'] = $fraud_info['score'];\n				$this->data['explanation'] = $fraud_info['explanation'];\n				$this->data['risk_score'] = $fraud_info['risk_score'];\n				$this->data['queries_remaining'] = $fraud_info['queries_remaining'];\n				$this->data['maxmind_id'] = $fraud_info['maxmind_id'];\n				$this->data['error'] = $fraud_info['error'];\n			} else {\n				$this->data['maxmind_id'] = '';\n			}\n			\n			if ($order_info['payment_address_format']) {\n				$format = $order_info['payment_address_format'];\n			} else {\n				$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \"\\n\" . '{country}' . \"\\n\" . 'Tel. {telephone}';\n			}\n			\n			$find = array(\n				'{firstname}',\n				'{lastname}',\n				'{company}',\n				'{address_1}',\n				'{address_2}',\n				'{city}',\n				'{postcode}',\n				'{zone}',\n				'{zone_code}',\n				'{country}',\n				'{telephone}'\n			);\n		\n			$replace = array(\n				'firstname' => $order_info['payment_firstname'],\n				'lastname'  => $order_info['payment_lastname'],\n				'company'   => $order_info['payment_company'],\n				'address_1' => $order_info['payment_address_1'],\n				'address_2' => $order_info['payment_address_2'],\n				'city'      => $order_info['payment_city'],\n				'postcode'  => $order_info['payment_postcode'],\n				'zone'      => $order_info['payment_zone'],\n				'zone_code' => $order_info['payment_zone_code'],\n				'country'   => $order_info['payment_country'],\n				'telephone' => $order_info['telephone']				\n			);\n		\n			$this->data['payment_address'] = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));						\n									\n			if ($order_info['shipping_address_format']) {\n				$format = $order_info['shipping_address_format'];\n			} else {\n				$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \"\\n\" . '{country}' . \"\\n\" . 'Tel. {telephone}';\n			}\n			\n			$find = array(\n				'{firstname}',\n				'{lastname}',\n				'{company}',\n				'{address_1}',\n				'{address_2}',\n				'{city}',\n				'{postcode}',\n				'{zone}',\n				'{zone_code}',\n				'{country}',\n				'{telephone}'\n			);\n		\n			$replace = array(\n				'firstname' => $order_info['shipping_firstname'],\n				'lastname'  => $order_info['shipping_lastname'],\n				'company'   => $order_info['shipping_company'],\n				'address_1' => $order_info['shipping_address_1'],\n				'address_2' => $order_info['shipping_address_2'],\n				'city'      => $order_info['shipping_city'],\n				'postcode'  => $order_info['shipping_postcode'],\n				'zone'      => $order_info['shipping_zone'],\n				'zone_code' => $order_info['shipping_zone_code'],\n				'country'   => $order_info['shipping_country'],\n				'telephone' => $order_info['shipping_telephone']\n			);\n		\n			$this->data['shipping_address'] = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));\n			\n			if(strcmp($order_info['payment_code'], \"bank_transfer\") == 0 && strpos(strtoupper($order_info['payment_method']), 'TRANSFER') !== true) {\n				$this->data['payment_method'] = array();\n				$this->data['payment_number'] = array();\n				$payments = explode(\";\", $order_info['payment_method']);\n				foreach($payments as $value) {\n					$payments = explode(\",\", $value);\n					array_push($this->data['payment_method'], trim($payments[0], \" \"));\n					if(isset($payments[1])) {\n						array_push($this->data['payment_number'], $payments[1]);\n					} else {\n						array_push($this->data['payment_number'], \"\");\n					}\n				}\n			} else {\n				$this->data['payment_method'] = array(0=>$order_info['payment_method']);\n				$this->data['payment_number'] = array(0=>'');\n			}\n			\n			if(!strcmp($order_info['payment_code'], \"bank_transfer\") == 0) {\n				$order_doku = $this->model_sale_order->getOrderDoku($this->request->get['order_id']);\n				$this->data['doku_status'] = $order_doku[0]['trxstatus'];\n				$this->data['edu_status'] = $order_doku[0]['verifystatus'];\n			}\n			$this->data['payment_code'] = $order_info['payment_code'];\n			\n			$this->template = 'sale/order_info.tpl';\n			$this->children = array(\n				'common/header',\n				'common/footer'\n			);\n			\n			/*echo \"<pre>\";\n				print_r($this->data);\n			echo \"</pre>\";*/\n			$this->response->setOutput($this->render());\n		} else {\n			$this->load->language('error/not_found');\n\n			$this->document->setTitle($this->language->get('heading_title'));\n\n			$this->data['heading_title'] = $this->language->get('heading_title');\n\n			$this->data['text_not_found'] = $this->language->get('text_not_found');\n\n			$this->data['breadcrumbs'] = array();\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('text_home'),\n				'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),\n				'separator' => false\n			);\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('heading_title'),\n				'href'      => $this->url->link('error/not_found', 'token=' . $this->session->data['token'], 'SSL'),\n				'separator' => ' :: '\n			);\n		\n			$this->template = 'error/not_found.tpl';\n			$this->children = array(\n				'common/header',\n				'common/footer'\n			);\n			\n			//echo \"gagal\";\n			 $this->response->setOutput($this->render());\n		}	\n	}\n\n	public function createInvoiceNo() {\n		$this->language->load('sale/order');\n\n		$json = array();\n		\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n		} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$invoice_no = $this->model_sale_order->createInvoiceNo($this->request->get['order_id']);\n			\n			if ($invoice_no) {\n				$json['invoice_no'] = $invoice_no;\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n\n		$this->response->setOutput(json_encode($json));\n  	}\n\n	public function addCredit() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['customer_id']) {\n				$this->load->model('sale/customer');\n				\n				$credit_total = $this->model_sale_customer->getTotalTransactionsByOrderId($this->request->get['order_id']);\n				\n				if (!$credit_total) {\n					$this->model_sale_customer->addTransaction($order_info['customer_id'], $this->language->get('text_order_id') . ' #' . $this->request->get['order_id'], $order_info['total'], $this->request->get['order_id']);\n					\n					$json['success'] = $this->language->get('text_credit_added');\n				} else {\n					$json['error'] = $this->language->get('error_action');\n				}\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n	\n	public function removeCredit() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['customer_id']) {\n				$this->load->model('sale/customer');\n				\n				$this->model_sale_customer->deleteTransaction($this->request->get['order_id']);\n					\n				$json['success'] = $this->language->get('text_credit_removed');\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n				\n	public function addReward() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n						\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['customer_id']) {\n				$this->load->model('sale/customer');\n\n				$reward_total = $this->model_sale_customer->getTotalCustomerRewardsByOrderId($this->request->get['order_id']);\n				\n				if (!$reward_total) {\n					$this->model_sale_customer->addReward($order_info['customer_id'], $this->language->get('text_order_id') . ' #' . $this->request->get['order_id'], $order_info['reward'], $this->request->get['order_id']);\n					\n					$json['success'] = $this->language->get('text_reward_added');\n				} else {\n					$json['error'] = $this->language->get('error_action'); \n				}\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n	\n	public function removeReward() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['customer_id']) {\n				$this->load->model('sale/customer');\n\n				$this->model_sale_customer->deleteReward($this->request->get['order_id']);\n				\n				$json['success'] = $this->language->get('text_reward_removed');\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n		\n	public function addCommission() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['affiliate_id']) {\n				$this->load->model('sale/affiliate');\n				\n				$affiliate_total = $this->model_sale_affiliate->getTotalTransactionsByOrderId($this->request->get['order_id']);\n				\n				if (!$affiliate_total) {\n					$this->model_sale_affiliate->addTransaction($order_info['affiliate_id'], $this->language->get('text_order_id') . ' #' . $this->request->get['order_id'], $order_info['commission'], $this->request->get['order_id']);\n					\n					$json['success'] = $this->language->get('text_commission_added');\n				} else {\n					$json['error'] = $this->language->get('error_action'); \n				}\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n	\n	public function removeCommission() {\n		$this->language->load('sale/order');\n		\n		$json = array(); \n    	\n     	if (!$this->user->hasPermission('modify', 'sale/order')) {\n      		$json['error'] = $this->language->get('error_permission'); \n    	} elseif (isset($this->request->get['order_id'])) {\n			$this->load->model('sale/order');\n			\n			$order_info = $this->model_sale_order->getOrder($this->request->get['order_id']);\n			\n			if ($order_info && $order_info['affiliate_id']) {\n				$this->load->model('sale/affiliate');\n\n				$this->model_sale_affiliate->deleteTransaction($this->request->get['order_id']);\n				\n				$json['success'] = $this->language->get('text_commission_removed');\n			} else {\n				$json['error'] = $this->language->get('error_action');\n			}\n		}\n		\n		$this->response->setOutput(json_encode($json));\n  	}\n\n	public function history() {\n    	$this->language->load('sale/order');\n		\n		$this->data['error'] = '';\n		$this->data['success'] = '';\n		\n		$this->load->model('sale/order');\n	\n		if ($this->request->server['REQUEST_METHOD'] == 'POST') {\n			if (!$this->user->hasPermission('modify', 'sale/order')) { \n				$this->data['error'] = $this->language->get('error_permission');\n			}\n			\n			if (!$this->data['error']) { \n				$this->model_sale_order->addOrderHistory($this->request->get['order_id'], $this->request->post);\n				\n				$this->data['success'] = $this->language->get('text_success');\n			}\n		}\n				\n		$this->data['text_no_results'] = $this->language->get('text_no_results');\n		\n		$this->data['column_date_added'] = $this->language->get('column_date_added');\n		$this->data['column_status'] = $this->language->get('column_status');\n		$this->data['column_notify'] = $this->language->get('column_notify');\n		$this->data['column_comment'] = $this->language->get('column_comment');\n\n		if (isset($this->request->get['page'])) {\n			$page = $this->request->get['page'];\n		} else {\n			$page = 1;\n		}  \n		\n		$this->data['histories'] = array();\n			\n		$results = $this->model_sale_order->getOrderHistories($this->request->get['order_id'], ($page - 1) * 10, 10);\n      		\n		foreach ($results as $result) {\n        	$this->data['histories'][] = array(\n				'notify'     => $result['notify'] ? $this->language->get('text_yes') : $this->language->get('text_no'),\n				'status'     => $result['status'],\n				'comment'    => nl2br($result['comment']),\n        		'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added']))\n        	);\n      	}			\n		\n		$history_total = $this->model_sale_order->getTotalOrderHistories($this->request->get['order_id']);\n			\n		$pagination = new Pagination();\n		$pagination->total = $history_total;\n		$pagination->page = $page;\n		$pagination->limit = 10; \n		$pagination->text = $this->language->get('text_pagination');\n		$pagination->url = $this->url->link('sale/order/history', 'token=' . $this->session->data['token'] . '&order_id=' . $this->request->get['order_id'] . '&page={page}', 'SSL');\n			\n		$this->data['pagination'] = $pagination->render();\n		\n		$this->template = 'sale/order_history.tpl';		\n		\n		$this->response->setOutput($this->render());\n  	}\n	\n	public function download() {\n		$this->load->model('sale/order');\n		\n		if (isset($this->request->get['order_option_id'])) {\n			$order_option_id = $this->request->get['order_option_id'];\n		} else {\n			$order_option_id = 0;\n		}\n		\n		$option_info = $this->model_sale_order->getOrderOption($this->request->get['order_id'], $order_option_id);\n		\n		if ($option_info && $option_info['type'] == 'file') {\n			$file = DIR_DOWNLOAD . $option_info['value'];\n			$mask = basename(utf8_substr($option_info['value'], 0, utf8_strrpos($option_info['value'], '.')));\n\n			if (!headers_sent()) {\n				if (file_exists($file)) {\n					header('Content-Type: application/octet-stream');\n					header('Content-Description: File Transfer');\n					header('Content-Disposition: attachment; filename=\"' . ($mask ? $mask : basename($file)) . '\"');\n					header('Content-Transfer-Encoding: binary');\n					header('Expires: 0');\n					header('Cache-Control: must-revalidate, post-check=0, pre-check=0');\n					header('Pragma: public');\n					header('Content-Length: ' . filesize($file));\n					\n					readfile($file, 'rb');\n					exit;\n				} else {\n					exit('Error: Could not find file ' . $file . '!');\n				}\n			} else {\n				exit('Error: Headers already sent out!');\n			}\n		} else {\n			$this->load->language('error/not_found');\n\n			$this->document->setTitle($this->language->get('heading_title'));\n\n			$this->data['heading_title'] = $this->language->get('heading_title');\n\n			$this->data['text_not_found'] = $this->language->get('text_not_found');\n\n			$this->data['breadcrumbs'] = array();\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('text_home'),\n				'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),\n				'separator' => false\n			);\n\n			$this->data['breadcrumbs'][] = array(\n				'text'      => $this->language->get('heading_title'),\n				'href'      => $this->url->link('error/not_found', 'token=' . $this->session->data['token'], 'SSL'),\n				'separator' => ' :: '\n			);\n		\n			$this->template = 'error/not_found.tpl';\n			$this->children = array(\n				'common/header',\n				'common/footer'\n			);\n		\n			$this->response->setOutput($this->render());\n		}	\n	}\n\n	public function cancel() {\n		$this->load->model('sale/order');\n		$order_id = $this->request->post['cancel_order_id'];\n		if((int)$order_id==0) {\n			$this->redirect($this->url->link('sale/ordercw', 'token=' . $this->session->data['token'] . $url, 'SSL'));\n		} else {\n			$result = $this->model_sale_order->cancelOrder($order_id);\n		}\n		return $this->response->setOutput(json_encode($result));\n	}\n\n	public function upload() {\n		$this->language->load('sale/order');\n		\n		$json = array();\n		\n		if ($this->request->server['REQUEST_METHOD'] == 'POST') {\n			if (!empty($this->request->files['file']['name'])) {\n				$filename = html_entity_decode($this->request->files['file']['name'], ENT_QUOTES, 'UTF-8');\n				\n				if ((utf8_strlen($filename) < 3) || (utf8_strlen($filename) > 128)) {\n					$json['error'] = $this->language->get('error_filename');\n				}	  	\n				\n				$allowed = array();\n				\n				$filetypes = explode(',', $this->config->get('config_upload_allowed'));\n				\n				foreach ($filetypes as $filetype) {\n					$allowed[] = trim($filetype);\n				}\n				\n				if (!in_array(utf8_substr(strrchr($filename, '.'), 1), $allowed)) {\n					$json['error'] = $this->language->get('error_filetype');\n				}\n							\n				if ($this->request->files['file']['error'] != UPLOAD_ERR_OK) {\n					$json['error'] = $this->language->get('error_upload_' . $this->request->files['file']['error']);\n				}\n			} else {\n				$json['error'] = $this->language->get('error_upload');\n			}\n		\n			if (!isset($json['error'])) {\n				if (is_uploaded_file($this->request->files['file']['tmp_name']) && file_exists($this->request->files['file']['tmp_name'])) {\n					$file = basename($filename) . '.' . md5(mt_rand());\n					\n					$json['file'] = $file;\n					\n					move_uploaded_file($this->request->files['file']['tmp_name'], DIR_DOWNLOAD . $file);\n				}\n							\n				$json['success'] = $this->language->get('text_upload');\n			}	\n		}\n		\n		$this->response->setOutput(json_encode($json));\n	}\n			\n  	public function invoice() {\n		$this->load->language('sale/order');\n\n		$this->data['title'] = $this->language->get('heading_title');\n\n		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {\n			$this->data['base'] = HTTPS_SERVER;\n		} else {\n			$this->data['base'] = HTTP_SERVER;\n		}\n\n		$this->data['direction'] = $this->language->get('direction');\n		$this->data['language'] = $this->language->get('code');\n\n		$this->data['text_invoice'] = $this->language->get('text_invoice');\n\n		$this->data['text_order_id'] = $this->language->get('text_order_id');\n		$this->data['text_invoice_no'] = $this->language->get('text_invoice_no');\n		$this->data['text_invoice_date'] = $this->language->get('text_invoice_date');\n		$this->data['text_date_added'] = $this->language->get('text_date_added');\n		$this->data['text_telephone'] = $this->language->get('text_telephone');\n		$this->data['text_fax'] = $this->language->get('text_fax');\n		$this->data['text_to'] = $this->language->get('text_to');\n		$this->data['text_company_id'] = $this->language->get('text_company_id');\n		$this->data['text_tax_id'] = $this->language->get('text_tax_id');		\n		$this->data['text_ship_to'] = $this->language->get('text_ship_to');\n		$this->data['text_payment_method'] = $this->language->get('text_payment_method');\n		$this->data['text_shipping_method'] = $this->language->get('text_shipping_method');\n		\n		$this->data['text_invoice_invoice_no'] = \"Invoice No.\";\n		$this->data['text_invoice_date_added'] = \"Date\";\n		$this->data['text_invoice_order_id'] = \"Order ID\";\n		$this->data['text_invoice_comment'] = \"Comment:\";\n		$this->data['text_invoice_sales'] = \"Sales,\";\n		$this->data['text_invoice_approve'] = \"Approved by,\";\n\n		$this->data['column_product'] = $this->language->get('column_product');\n		$this->data['column_model'] = $this->language->get('column_model');\n		$this->data['column_quantity'] = $this->language->get('column_quantity');\n		$this->data['column_price'] = $this->language->get('column_price');\n		$this->data['column_total'] = $this->language->get('column_total');\n		$this->data['column_comment'] = $this->language->get('column_comment');\n\n		$this->load->model('sale/order');\n\n		$this->load->model('setting/setting');\n\n		$this->data['orders'] = array();\n\n		$orders = array();\n\n		if (isset($this->request->post['selected'])) {\n			$orders = $this->request->post['selected'];\n		} elseif (isset($this->request->get['order_id'])) {\n			$orders[] = $this->request->get['order_id'];\n		}\n		\n		if (!empty($this->request->get['shipping_receipt'])) {\n			$shipping_receipt = $this->request->get['shipping_receipt'];\n			$send_email = $this->request->get['send_email'];\n			$this->model_sale_order->addShippingReceipt($this->request->get['order_id'], $shipping_receipt, $send_email);\n		} else {\n			$shipping_receipt = 0;\n		}\n\n		foreach ($orders as $order_id) {\n			$order_info = $this->model_sale_order->getOrder($order_id);\n\n			$payment_city = explode(\",\",$order_info['payment_city']);\n			$shipping_city = explode(\",\",$order_info['shipping_city']);\n			\n			if ($order_info) {\n				$store_info = $this->model_setting_setting->getSetting('config', $order_info['store_id']);\n				\n				if ($store_info) {\n					$store_address = $store_info['config_address'];\n					$store_email = $store_info['config_email'];\n					$store_telephone = $store_info['config_telephone'];\n					$store_fax = $store_info['config_fax'];\n				} else {\n					$store_address = $this->config->get('config_address');\n					$store_email = $this->config->get('config_email');\n					$store_telephone = $this->config->get('config_telephone');\n					$store_fax = $this->config->get('config_fax');\n				}\n				\n				if ($order_info['invoice_no']) {\n					$invoice_no = $order_info['invoice_prefix'] . $order_info['invoice_no'];\n				} else {\n					$invoice_no = '';\n				}\n				\n				if ($order_info['shipping_address_format']) {\n					$format = $order_info['shipping_address_format'];\n				} else {\n					$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \", \" . '{zone}';\n				}\n\n				$find = array(\n					'{firstname}',\n					'{lastname}',\n					'{company}',\n					'{address_1}',\n					'{address_2}',\n					'{city}',\n					'{postcode}',\n					'{zone}',\n					'{zone_code}',\n					'{country}'\n				);\n\n				$replace = array(\n					'firstname' => $order_info['shipping_firstname'],\n					'lastname'  => $order_info['shipping_lastname'],\n					'company'   => $order_info['shipping_company'],\n					'address_1' => $order_info['shipping_address_1'],\n					'address_2' => $order_info['shipping_address_2'],\n					'city'      => $shipping_city[0],\n					'postcode'  => $order_info['shipping_postcode'],\n					'zone'      => $order_info['shipping_zone'],\n					'zone_code' => $order_info['shipping_zone_code'],\n					'country'   => $order_info['shipping_country']\n				);\n\n				$shipping_address = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));\n\n				if ($order_info['payment_address_format']) {\n					$format = $order_info['payment_address_format'];\n				} else {\n					$format = '{firstname} {lastname}' . \"\\n\" . '{company}' . \"\\n\" . '{address_1}' . \"\\n\" . '{address_2}' . \"\\n\" . '{city} {postcode}' . \", \" . '{zone}';\n				}\n\n				$find = array(\n					'{firstname}',\n					'{lastname}',\n					'{company}',\n					'{address_1}',\n					'{address_2}',\n					'{city}',\n					'{postcode}',\n					'{zone}',\n					'{zone_code}',\n					'{country}'\n				);\n\n				$replace = array(\n					'firstname' => $order_info['payment_firstname'],\n					'lastname'  => $order_info['payment_lastname'],\n					'company'   => $order_info['payment_company'],\n					'address_1' => $order_info['payment_address_1'],\n					'address_2' => $order_info['payment_address_2'],\n					'city'      => $payment_city[0],\n					'postcode'  => $order_info['payment_postcode'],\n					'zone'      => $order_info['payment_zone'],\n					'zone_code' => $order_info['payment_zone_code'],\n					'country'   => $order_info['payment_country']\n				);\n\n				$payment_address = str_replace(array(\"\\r\\n\", \"\\r\", \"\\n\"), '<br />', preg_replace(array(\"/\\s\\s+/\", \"/\\r\\r+/\", \"/\\n\\n+/\"), '<br />', trim(str_replace($find, $replace, $format))));\n\n				$product_data = array();\n\n				$products = $this->model_sale_order->getOrderProducts($order_id);\n\n				foreach ($products as $product) {\n					$option_data = array();\n\n					$options = $this->model_sale_order->getOrderOptions($order_id, $product['order_product_id']);\n\n					foreach ($options as $option) {\n						if ($option['type'] != 'file') {\n							$value = $option['value'];\n						} else {\n							$value = utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.'));\n						}\n						\n						$option_data[] = array(\n							'name'  => $option['name'],\n							'value' => $value\n						);								\n					}\n\n					$product_data[] = array(\n						'name'     => $product['name'],\n						'model'    => $product['model'],\n						'option'   => $option_data,\n						'quantity' => $product['quantity'],\n						'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),\n						'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']),\n						'source'   => $product['source']\n					);\n				}\n				\n				$service_data = array();\n				\n				$services = $this->model_sale_order->getOrderServices($order_id);\n\n				foreach ($services as $service) {\n					$service_data[] = array(\n						'service'	  => $service['service'],\n						'description' => $service['description'],\n						'quantity' 	  => $service['quantity'],\n						'price'       => $this->currency->format($service['price'], $order_info['currency_code'], $order_info['currency_value']),\n						'total'       => $this->currency->format($service['total'], $order_info['currency_code'], $order_info['currency_value']),\n						'source'  	  => $service['source']			\n					);\n				}\n				\n				$voucher_data = array();\n				\n				$vouchers = $this->model_sale_order->getOrderVouchers($order_id);\n\n				foreach ($vouchers as $voucher) {\n					$voucher_data[] = array(\n						'description' => $voucher['description'],\n						'amount'      => $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value'])			\n					);\n				}\n					\n				$total_data = $this->model_sale_order->getOrderTotals($order_id);\n\n				$this->data['orders'][] = array(\n					'order_id'	         => $order_id,\n					'invoice_no'         => $invoice_no,\n					'date_invoice'       => date($this->language->get('date_format_short'), strtotime($order_info['date_invoice'])),\n					'store_name'         => $order_info['store_name'],\n					'store_url'          => rtrim($order_info['store_url'], '/'),\n					'store_address'      => nl2br($store_address),\n					'store_email'        => $store_email,\n					'store_telephone'    => $store_telephone,\n					'store_fax'          => $store_fax,\n					'email'              => $order_info['email'],\n					'telephone'          => $order_info['telephone'],\n					'shipping_address'   => $shipping_address,\n					'shipping_method'    => $order_info['shipping_method'],\n					'shipping_telephone' => $order_info['shipping_telephone'],\n					'payment_address'    => $payment_address,\n					'payment_company_id' => $order_info['payment_company_id'],\n					'payment_tax_id'     => $order_info['payment_tax_id'],\n					'payment_method'     => $order_info['payment_method'],\n					'shipping_receipt'	 => $order_info['shipping_receipt'],\n					'product'            => $product_data,\n					'service'            => $service_data,\n					'voucher'            => $voucher_data,\n					'total'              => $total_data,\n					'comment'            => nl2br($order_info['comment']),\n					'credit_to'			 => ucwords($order_info['credit_to'])\n				);\n			}\n		}\n\n		$this->template = 'sale/order_invoice.tpl';\n\n		$this->response->setOutput($this->render());\n	}\n	\n	public function orderModify() {\n		if(isset($this->request->get['order_id'])) {\n			$order_id = $this->request->get['order_id'];\n		}\n		if(isset($this->request->get['user'])) {\n			$user = $this->request->get['user'];\n		}\n		if(isset($this->request->get['text'])) {\n			$text = $this->request->get['text'];\n		}\n		$this->load->model('sale/order');\n		$this->model_sale_order->addOrderModify($order_id,$user,$text);\n	}\n\n	public function orderInsert() {\n		return $this->response->setOutput(json_encode($this->request->post));\n	}\n\n	public function shippingMethod() {\n\n\n		//return $this->response->setOutput(json_encode($this->request->get));\n		$city_value = $this->request->post['city_value'];\n		//$city_value = \"Cempaka Putih, Kota Jakarta Pusat\";\n		$this->load->model('setting/extension');\n		$results = $this->model_setting_extension->getExtensions('shipping');\n\n		$address_data = array();\n		$this->load->library('tax');\n		$this->load->model('localisation/zone');\n		$this->load->model('shipping/method');\n		\n		$info = $this->model_localisation_zone->getCityId($city_value);\n		\n		if($info) {\n			$address_data = array(\n				'zone_id' 		=> $info['zone_id'],\n				'city_id' 		=> $info['city_id'],\n				'iso_code_2'	=> 'ID'\n			);		\n		}\n\n		// echo \"<pre>\";\n		$json['shipping_method'] = array();\n		foreach ($results as $result) {\n			if ($this->config->get($result['code'] . '_status')) {\n				$this->load->model('shipping/' . $result['code']);\n\n				$quote = $this->{'model_shipping_' . $result['code']}->getQuote($address_data); \n				//print_r($quote);\n				\n				// print_r($quote);\n				if ($quote) {\n					$json['shipping_method'][$result['code']] = array( \n						'title'      => $quote['title'],\n						'quote'      => $quote['quote'], \n						'sort_order' => $quote['sort_order'],\n						'error'      => $quote['error']\n					);\n				}\n			}\n		}\n\n		// echo \"<pre>\";\n		// 	print_r($json);\n		// echo \"</pre>\";\n		return $this->response->setOutput(json_encode($json));\n		\n	}\n	\n	public function autocomplete() {\n		$json = array();\n		\n		if (isset($this->request->get['filter_order_id'])) {\n			$this->load->model('sale/order');\n			\n			$data = array(\n				'filter_order_id' => $this->request->get['filter_order_id'],\n				'start'       	  => 0,\n				'limit'       	  => 1\n			);\n		\n			$result = $this->model_sale_order->getOrder($this->request->get['filter_order_id']);\n			\n			//foreach ($results as $result) {\n				$json[] = array(\n					'order_id'       	=> $result['order_id'], \n					'firstname'         => $result['firstname'],\n					/*'lastname'        => $result['lastname'],*/\n					'email'             => $result['email'],\n					'telephone'         => $result['telephone']\n				);					\n			//}\n		}\n\n		$sort_order = array();\n	  \n		foreach ($json as $key => $value) {\n			$sort_order[$key] = $value['order_id'];\n		}\n\n		array_multisort($sort_order, SORT_ASC, $json);\n\n		$this->response->setOutput(json_encode($json));\n	}\n}\n?>",
			"file": "/C/xampp/htdocs/latihan/citywalkadminzz/controller/sale/ordercw.php",
			"file_size": 129237,
			"file_write_time": 131260736125087513,
			"settings":
			{
				"buffer_size": 125311,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/citywalkadminzz/view/template/sale/order_form_insert.tpl",
			"settings":
			{
				"buffer_size": 43068,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Pc/AppData/Local/Temp/fz3temp-2/confirm.php",
			"settings":
			{
				"buffer_size": 33815,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_cc_2_12.php",
			"settings":
			{
				"buffer_size": 204,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/checkout/shipping_payment_method.tpl",
			"settings":
			{
				"buffer_size": 37254,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2_3.php",
			"settings":
			{
				"buffer_size": 188,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/product/compare.tpl",
			"settings":
			{
				"buffer_size": 8244,
				"line_ending": "Windows"
			}
		},
		{
			"file": "apps/controllers/common/home.php",
			"settings":
			{
				"buffer_size": 383,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/forum/forum.php",
			"settings":
			{
				"buffer_size": 3070,
				"line_ending": "Windows"
			}
		},
		{
			"file": "apps/startup.php",
			"settings":
			{
				"buffer_size": 1310,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/models/tools.php",
			"settings":
			{
				"buffer_size": 156,
				"line_ending": "Unix"
			}
		},
		{
			"file": "apps/views/common/sidebar.php",
			"settings":
			{
				"buffer_size": 959,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: <progress>"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"P",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 464.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/xampp/htdocs/web_edu",
		"/C/xampp/htdocs/web_edu/apps",
		"/C/xampp/htdocs/web_edu/apps/controllers",
		"/C/xampp/htdocs/web_edu/apps/models",
		"/C/xampp/htdocs/web_edu/apps/views",
		"/C/xampp/htdocs/web_edu/apps/views/common",
		"/C/xampp/htdocs/web_edu/apps/views/route"
	],
	"file_history":
	[
		"/C/xampp/htdocs/latihan/citywalkadminzz/view/template/sale/order_form_insert",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/confirm.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/order.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/success.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/success.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/shipping_payment_method.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/shipping_payment_method.php",
		"/C/xampp/htdocs/latihan/catalog/controller/checkout/shipping_payment_method.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/payment/bca_cc_2_12.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_cc_2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_cc_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/payment/bca_cc_2_3.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/newsletter.tpl",
		"/C/xampp/htdocs/latihan/catalog/model/payment/bca_cc_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cc_2_3.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cc_2_6.php",
		"/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_klikpay_2_3.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/header.tpl",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_cc_2_6.php",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_cc_2_3.php",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_cc_2_12.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/header.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/information.tpl",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/checkout.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/order.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/stylesheet.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/product.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/product_list.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/home.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/manufacturer_list.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/text.css",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/stylesheet/cart.css",
		"/C/xampp/htdocs/latihan/catalog/controller/product/compare.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2 2.php",
		"/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_wallet.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/redirect.php",
		"/C/xampp/htdocs/latihan/catalog/controller/sprint/bcaklikpay_paymentflag.php",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_wallet.php",
		"/C/xampp/htdocs/latihan/aurelleaja/view/template/payment/bca_wallet.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/header.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/header-20160510.tpl",
		"/C/xampp/htdocs/latihan/catalog/controller/common/header.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_6 2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_3 2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_12 2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_12.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2_6.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bcaklikpay_paymentflag.php",
		"/C/xampp/htdocs/latihan/catalog/controller/sprint/bcaklikpay_inquiry.php",
		"/C/xampp/htdocs/web_edu/index.php",
		"/C/xampp/htdocs/web_edu/apps/views/sidebar.php",
		"/C/xampp/htdocs/web_edu/apps/views/forum/show_thread.php",
		"/C/xampp/htdocs/web_edu/apps/controllers/home.php",
		"/C/xampp/htdocs/web_edu/apps/views/common/sidebar.php",
		"/C/xampp/htdocs/web_edu/assets/css/mmenu.css",
		"/C/xampp/htdocs/web_edu/assets/css/main.css",
		"/C/xampp/htdocs/web_edu/admin_edu/apps/views/header.php",
		"/C/xampp/htdocs/web_edu/apps/views/header.php",
		"/C/xampp/htdocs/web_edu/apps/views/home.php",
		"/C/xampp/htdocs/web_edu/apps/views/common/header.php",
		"/C/xampp/htdocs/web_edu/apps/views/common/footer.php",
		"/C/xampp/htdocs/web_edu/apps/views/common/content.php",
		"/C/xampp/htdocs/latihan/catalog/model/payment/bca_klikpay_2_3.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_klikpay_2_3.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/payment/bca_klikpay_2_3.tpl",
		"/C/xampp/htdocs/latihan/catalog/language/indonesia/checkout/success.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/checkout/success.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/success.tpl",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/checkout/shipping_payment_method.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/redirect 3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/redirect 2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_cc_2 2.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_klikpay_2 3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bcaklikpay_inquiry.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/doku_test.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/doku_verify.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/bca_cicilan_3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/bcaklikpay_inquiry.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/payment/bca_klikpay_2_12.tpl",
		"/C/xampp/htdocs/latihan/catalog/model/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/model/payment/bca_klikpay_2_6.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cicilan_12.php",
		"/C/xampp/htdocs/latihan/catalog/model/checkout/order.php",
		"/C/xampp/htdocs/latihan/catalog/model/sprint/bca_klikpay_2.php",
		"/C/xampp/htdocs/latihan/catalog/controller/checkout/success.php",
		"/C/xampp/htdocs/latihan/catalog/controller/checkout/confirm.php",
		"/C/xampp/htdocs/latihan/aurelleaja/view/template/payment/bca_klikpay_2_12.tpl",
		"/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_klikpay_2_6.php",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_klikpay_2_12.php",
		"/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_klikpay_2_3.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2_6.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/payment/mandiri_cicilan_3.php",
		"/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2_3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/checkout.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/confirm.php",
		"/C/xampp/htdocs/latihan/catalog/model/payment/bca_cicilan_12.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/mandiri_cicilan_3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/footer.tpl",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/payment/mandiri_cicilan_3.tpl",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cicilan_6.php",
		"/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cicilan_3.php",
		"/C/xampp/htdocs/latihan/aurelleaja/controller/payment/bca_klikpay_2_6.php",
		"/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/checkout/checkout.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/shipping_payment_method.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/shipping_payment_method.tpl",
		"/C/xampp/htdocs/latihan/develop_mode/index.html",
		"/C/xampp/htdocs/latihan/develop_mode/demo/onepage.html",
		"/C/xampp/htdocs/latihan/develop_mode/demo/default.html",
		"/C/xampp/htdocs/web_edu/README.md",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/product.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/order.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/footer.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/login.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/footer.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/logout.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-2/citywalk.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/bcaklikpay_paymentflag.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/success.tpl",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/redirect 3.php",
		"/C/Users/Pc/AppData/Local/Temp/fz3temp-3/redirect 2.php"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"getForm(",
			"getForm(\"update",
			"getForm('update",
			"update",
			"getForm(",
			"getFrom",
			"getFrom(",
			"update",
			"getForm",
			"bca_cc_2",
			"bca_klikpay_2",
			"bca_cc_2",
			"_installment",
			"klikpay_2",
			"bca_klikpay",
			"elseif",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"bca_cc_2",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"bca_cc_2",
			"6x",
			"3x",
			"bca_cc_2",
			"notification",
			"alert",
			"classalert",
			"notification",
			"#notification",
			"<!--",
			"/*",
			"compare",
			"#notification",
			"notification",
			"#notification",
			"notification",
			"compare",
			".js",
			"common",
			"compare",
			"addToCompare",
			"addToCompare\n",
			"addToCompare",
			"compare",
			"checkAmountNovEndYear",
			"subsidebar",
			"iLabel",
			"brands",
			"bca_klikpay_2",
			"bca_cicilan",
			"klikpay_2",
			"bca_klikpay",
			"bca_klikpau",
			"bca_cicilan/",
			"bca_cicilan",
			"cicilan",
			"bca_klikpay",
			".container-fluid > ",
			".containter-fluid",
			".containter-fluid >",
			".containter-fluid > ",
			".container > ",
			"container > ",
			"body",
			"footer",
			"panel",
			"panel-heading",
			"klikpay_2",
			"installment",
			"amount",
			"misc",
			"klikpay_2",
			"shipping_method']['cos",
			"shipping_method']",
			"cost",
			"$total",
			"totalamount",
			"klikpay",
			"tripledes",
			"<pre>",
			"trace",
			"klikpay_2",
			"<pre",
			"pre",
			"<pre>",
			"signature",
			"<pre",
			"klikpay_2",
			"klik_pay",
			"klikpay_2",
			"tenor",
			"//",
			"menu_sidebar",
			"bca_klikpay_2",
			"klikpay_2",
			"bca_klikpay_2",
			"unset",
			"bca_klikpay_2",
			"klikpay_2",
			"klikpay",
			"unset",
			"klikpay_2",
			"pre",
			"unset",
			"klikpay_2",
			"klikpay2",
			"klikpay_2",
			"<pre",
			"bca_klik",
			"payment_methods",
			"payment_method",
			"bca_klikpay",
			"popup",
			"select",
			"bcatest",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"bca_klikpay_2",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"bca_klikpay_2",
			"3x",
			"bca_klikpay_2_6",
			"bca_klikpay_2",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"bca_klikpay_2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bca_cc_2_12",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"bca_cc_2_12",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"bca_cc_2_12",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"12x",
			"6x",
			"bca_cc_2_12",
			"bca_cc_2_6",
			"bca_cc_2_3",
			"bca_wallet",
			"wallet",
			"",
			"bca_klikpay_2_installment",
			"bca_klikpay_2_12",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"bca_klikpay_2_12",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"12x",
			"6x",
			"bca_klikpay_2_12",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"bca_klikpay_2_12",
			"bca_klikpay_2_6",
			"bca_klikpay_2_3",
			"mmcontents",
			"mmfoots",
			"mmheads",
			"topfoots",
			"topheads",
			"bca_klikpay_2_",
			"callback",
			"payType",
			"code",
			"bca_klikpay_2",
			"Klik Pay",
			"bca_klikpay_2",
			"'",
			"",
			"bca_cc_2",
			"citywalkadminzz",
			"/home/radatime/",
			"$this->model_shipping_method->countWatchesProduct",
			"$this->model_shipping_method->countBoxWatches()",
			"$this->model_shipping_method->countWatchesProduct",
			"sale/order_rcw",
			"order_rcw",
			"firstname",
			"order_rcw",
			" <a class=\"btn btn-primary\" href=\"http://www.radatime.co.id/jam-tangan-rado-hyperchrome&stock=1\">all collection</a>",
			" <a class=\"col-xs-6 col-xs-offset-3 col-sm-2 col-sm-offset-5 btn btn-primary\" ",
			" <a class=\"col-xs-5 col-xs-offset-3 col-sm-2 col-sm-offset-5 btn btn-primary\" ",
			"<a class=\"col-xs-3 col-xs-offset-9 col-sm-2 col-sm-offset-5 btn btn-primary\" href=\"#\">more collection</a>",
			"style=\"/*box-shadow: 0px -7px 10px -10px #8c8b8b inset;*/\"",
			"/*style=\"box-shadow: 0px -7px 10px -10px #8c8b8b inset;\"*/",
			"subs",
			"jpg\"><span>asd</span></a>",
			"<a href=\"#\"><img",
			"<img",
			"",
			"border:0px",
			"<span style=\" display:block; cursor:pointer; text-decoration:none; font-weight:bold;\">",
			"'",
			"tab-order",
			"cicilan_18",
			"'",
			"mysqli_",
			"img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"alt=\"\" style=\"display:block;\">",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"alt=\"display:block;\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"alt=\"\" style=\"display:block;\"",
			"style=\"display:block;\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"alt=\"\" style=\"display:block;\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"padding-right: 30px;",
			"padding-right: 30px",
			"padding-right: 25px",
			"<img id=\"bar\"",
			"alt=\"\" style=\"display:block;\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"alt=\"\" display=\"display:block\";",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"display:block",
			"alt=\"\" style=\"display:none;\"",
			"<img id=\"bar\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"img id=\"bar\"",
			"alt=\"\" style=\"display:block;\"",
			"src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"<img src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"<img id=\"bar\"",
			"<tr id=\"bar\">",
			"alt=\"\" style=\"display:block;\"",
			"<img src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			">",
			"",
			"<img alt=\"\" style=\"display:block;\"  src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"",
			"alt=\"\" style=\"display:block;\"",
			"<img src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"alt=\"\" style=\"display:block;\"",
			">",
			"<img alt=\"\" style=\"display:block;\"  src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/",
			"",
			"alt=\"\" style=\"display:block;\"",
			"<img alt=\"\" height=\"158\" src=\"http://radatime.co.id/dada_mail_support_files/file_uploads/images/"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 31,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/xampp/htdocs/latihan/develop_mode/demo/advanced.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2137,
						"regions":
						{
						},
						"selection":
						[
							[
								1310,
								2119
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 15.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "apps/views/forum/content.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 371,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "apps/views/common/header.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3314,
						"regions":
						{
						},
						"selection":
						[
							[
								2815,
								2815
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1165.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "apps/views/media.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 241,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "apps/views/common/footer.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 333,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "apps/views/common/content.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 282,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "assets/css/main.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5618,
						"regions":
						{
						},
						"selection":
						[
							[
								2966,
								2966
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2016.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "apps/views/forum/sidebar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2001,
						"regions":
						{
						},
						"selection":
						[
							[
								653,
								653
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "apps/controllers/forum/forum.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 536,
						"regions":
						{
						},
						"selection":
						[
							[
								356,
								343
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "apps/views/forum/thread.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5012,
						"regions":
						{
						},
						"selection":
						[
							[
								4489,
								4489
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 638.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/xampp/htdocs/latihan/catalog/controller/checkout/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33820,
						"regions":
						{
						},
						"selection":
						[
							[
								13828,
								14221
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12065.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/latihan/catalog/controller/checkout/success.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68419,
						"regions":
						{
						},
						"selection":
						[
							[
								43613,
								48418
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 13129.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/success.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33082,
						"regions":
						{
						},
						"selection":
						[
							[
								17234,
								19093
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3682.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/latihan/catalog/model/checkout/order.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55115,
						"regions":
						{
						},
						"selection":
						[
							[
								15797,
								15470
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 56.0,
						"translation.y": 1148.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/latihan/system/library/cart.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41763,
						"regions":
						{
						},
						"selection":
						[
							[
								430,
								430
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/latihan/catalog/model/shipping/jne.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10223,
						"regions":
						{
						},
						"selection":
						[
							[
								500,
								756
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/latihan/catalog/model/shipping/jet.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10154,
						"regions":
						{
						},
						"selection":
						[
							[
								756,
								500
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/xampp/htdocs/latihan/catalog/controller/product/manufacturer.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30912,
						"regions":
						{
						},
						"selection":
						[
							[
								11914,
								11921
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 116.0,
						"translation.y": 3923.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/product/manufacturer_info.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13200,
						"regions":
						{
						},
						"selection":
						[
							[
								8500,
								8500
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3775.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/js/common.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12223,
						"regions":
						{
						},
						"selection":
						[
							[
								7284,
								7289
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3268.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/C/xampp/htdocs/latihan/catalog/controller/product/compare.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8359,
						"regions":
						{
						},
						"selection":
						[
							[
								7500,
								7500
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2265.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/common/footer.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21077,
						"regions":
						{
						},
						"selection":
						[
							[
								387,
								387
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/latihan/aurelleaja/language/english/payment/bca_cc_2_12.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1574,
						"regions":
						{
						},
						"selection":
						[
							[
								582,
								582
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/xampp/htdocs/latihan/catalog/model/payment/bca_cc_2_6.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 997,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/latihan/catalog/controller/payment/bca_cc_2_12.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1922,
						"regions":
						{
						},
						"selection":
						[
							[
								836,
								836
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_cc_2_3.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 200,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_cc_2.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 185,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/C/xampp/htdocs/latihan/aurelleaja/view/template/payment/bca_cc_2_12.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6471,
						"regions":
						{
						},
						"selection":
						[
							[
								1060,
								1060
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/C/xampp/htdocs/latihan/citywalkadminzz/model/sale/order.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88602,
						"regions":
						{
						},
						"selection":
						[
							[
								14826,
								15362
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2461.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/C/xampp/htdocs/latihan/citywalkadminzz/controller/sale/ordercw.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 125311,
						"regions":
						{
						},
						"selection":
						[
							[
								4567,
								4567
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1772.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/C/xampp/htdocs/latihan/citywalkadminzz/view/template/sale/order_form_insert.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43068,
						"regions":
						{
						},
						"selection":
						[
							[
								35913,
								35913
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 11186.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/C/Users/Pc/AppData/Local/Temp/fz3temp-2/confirm.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33815,
						"regions":
						{
						},
						"selection":
						[
							[
								14010,
								14010
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12065.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/C/xampp/htdocs/latihan/catalog/language/indonesia/payment/bca_cc_2_12.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 204,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/checkout/shipping_payment_method.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37254,
						"regions":
						{
						},
						"selection":
						[
							[
								20668,
								24345
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 11497.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/C/xampp/htdocs/latihan/catalog/language/english/payment/bca_klikpay_2_3.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 188,
						"regions":
						{
						},
						"selection":
						[
							[
								71,
								48
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/C/xampp/htdocs/latihan/catalog/view/theme/new_look_2015/template/product/compare.tpl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8244,
						"regions":
						{
						},
						"selection":
						[
							[
								773,
								773
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "apps/controllers/common/home.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383,
						"regions":
						{
						},
						"selection":
						[
							[
								380,
								380
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "apps/views/forum/forum.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3070,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "apps/startup.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1310,
						"regions":
						{
						},
						"selection":
						[
							[
								1093,
								1093
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 64.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "apps/models/tools.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 156,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "apps/views/common/sidebar.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 959,
						"regions":
						{
						},
						"selection":
						[
							[
								540,
								540
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"project": "web_edu.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"get",
				"system\\pear\\Console\\Getopt.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 267.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
